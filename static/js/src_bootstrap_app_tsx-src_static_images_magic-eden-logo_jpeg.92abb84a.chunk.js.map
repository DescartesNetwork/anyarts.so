{"version":3,"file":"static/js/src_bootstrap_app_tsx-src_static_images_magic-eden-logo_jpeg.92abb84a.chunk.js","mappings":"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","sources":["static.app.tsx","configs/manifest.config.ts","configs/sol.config.ts","configs/index.ts","hooks/useRoute.ts","sdk/jupAgSDK.ts","view/home/index.tsx","components/moreButton.tsx","view/collections/collectionCard.tsx","sdk/offset.ts","sdk/magicEdenSDK.ts","model/magicEden.controller.tsx","view/collections/collectionList.tsx","sdk/index.ts","hooks/usePlatform.ts","view/collections/index.tsx","components/rarity.tsx","model/metadata.controller.tsx","view/collection/nftCard.tsx","model/listing.controller.tsx","view/collection/index.tsx","hooks/useCollection.ts","view/index.tsx","model/devTools.ts","model/main.controller.tsx","model/index.ts","bootstrap.app.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.png\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel.default];\nexports.panels = panels;","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net, rpc } from '@sentre/senhub'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  metaplexAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: rpc,\n    metaplexAddress: 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: rpc,\n    metaplexAddress: 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: rpc,\n    metaplexAddress: 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import configs from 'configs'\nimport { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type AppRoute = {\n  root: string\n  to: (subroute: string) => void\n  extend: (subroute: string) => string\n  back: () => void\n}\n\nexport const useRoute = (): AppRoute => {\n  const history = useHistory()\n\n  const root = `/app/${appId}`\n  const extend = useCallback((subroute: string) => root + subroute, [root])\n  const to = useCallback(\n    (subroute: string) => history.push(extend(subroute)),\n    [history, extend],\n  )\n  const back = useCallback(() => history.goBack(), [history])\n\n  return { root, extend, to, back }\n}\n","import {\n  Cluster,\n  Connection,\n  PublicKey,\n  LAMPORTS_PER_SOL,\n  Transaction,\n} from '@solana/web3.js'\nimport { Jupiter } from '@jup-ag/core'\n\nimport configs from 'configs'\n\nconst {\n  sol: { node },\n} = configs\nconst connection = new Connection(node)\n\nconst USDC_ADDRESS = 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n// const UXD_ADDRESS = '7kbnvuGBxxj8AG9qp8Scn56muWGaRaFqxg1FsRp3PaFT'\nconst SOL_ADDRESS = 'So11111111111111111111111111111111111111112'\n\nexport const swapToSOL = async ({\n  amount,\n  walletAddress,\n  cluster = 'mainnet-beta',\n}: {\n  amount: number\n  walletAddress: string\n  cluster?: Cluster\n}) => {\n  const sol = amount * 1.01\n  const { data } = await (\n    await fetch('https://price.jup.ag/v1/price?id=SOL&vsToken=USDC')\n  ).json()\n  const inputAmount = sol * data.price * 10 ** 6\n  const jupiter = await Jupiter.load({\n    connection,\n    cluster,\n    user: new PublicKey(walletAddress),\n  })\n  const {\n    routesInfos: [routeInfo],\n  } = await jupiter.computeRoutes({\n    inputMint: new PublicKey(USDC_ADDRESS),\n    outputMint: new PublicKey(SOL_ADDRESS),\n    inputAmount,\n    slippage: 1,\n    forceFetch: true,\n  })\n  console.log('inputAmount', inputAmount / 10 ** 6)\n  console.log('outputAmount', routeInfo.outAmount / LAMPORTS_PER_SOL)\n  console.log(routeInfo)\n  const {\n    transactions: { setupTransaction, swapTransaction, cleanupTransaction },\n  } = await jupiter.exchange({ routeInfo })\n  const txs = [setupTransaction, swapTransaction, cleanupTransaction].filter(\n    (tx) => tx,\n  ) as Transaction[]\n  return txs\n}\n\nexport const sendAndConfirm = async (signedTxs: Transaction[]) => {\n  let txIds = []\n  for (const signedTx of signedTxs) {\n    const txId = await connection.sendRawTransaction(signedTx.serialize(), {\n      skipPreflight: true,\n      preflightCommitment: 'confirmed',\n    })\n    await connection.confirmTransaction(txId)\n    txIds.push(txId)\n  }\n  return txIds\n}\n","import { useCallback, useState } from 'react'\n\nimport { Button, Col, Row, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { useRoute } from 'hooks/useRoute'\nimport { NFTPlatform } from 'sdk'\nimport { useWallet } from '@sentre/senhub'\nimport { sendAndConfirm, swapToSOL } from 'sdk/jupAgSDK'\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false)\n  const { to } = useRoute()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const onDetails = useCallback(\n    (platform: NFTPlatform) => to(`/${platform}`),\n    [to],\n  )\n\n  const onJupAg = useCallback(async () => {\n    try {\n      setLoading(true)\n      const amount = 0.001\n      const txs = await swapToSOL({ amount, walletAddress })\n      const signedTxs = await window.sentre.wallet.signAllTransactions(txs)\n      const txIds = await sendAndConfirm(signedTxs)\n      return console.log(txIds)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [walletAddress])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Space>\n          <Button\n            onClick={() => onDetails('magicEden')}\n            icon={<IonIcon name=\"images-outline\" />}\n          >\n            Magic Eden\n          </Button>\n          <Button\n            onClick={onJupAg}\n            icon={<IonIcon name=\"send-outline\" />}\n            loading={loading}\n          >\n            Jup Ag\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Home\n","import { Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nexport type MoreButtonProps = {\n  onMore?: () => void\n  loading?: boolean\n  disabled?: boolean\n}\n\nconst MoreButton = ({\n  onMore = () => {},\n  loading = false,\n  disabled = false,\n}: MoreButtonProps) => {\n  return (\n    <Button\n      type=\"text\"\n      onClick={onMore}\n      loading={loading}\n      disabled={disabled}\n      icon={<IonIcon name=\"caret-down-outline\" />}\n    >\n      More\n    </Button>\n  )\n}\n\nexport default MoreButton\n","import { MouseEvent, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { AppState } from 'model'\nimport { NFTPlatform } from 'sdk'\nimport { useRoute } from 'hooks/useRoute'\n\nexport type CollectionCardProps = { platform: NFTPlatform; symbol: string }\n\nconst CollectionCard = ({ platform, symbol }: CollectionCardProps) => {\n  const {\n    [platform]: {\n      [symbol]: { name, description, image, website, twitter, discord },\n    },\n  } = useSelector((state: AppState) => state)\n  const { to } = useRoute()\n\n  const onSocialMedia = (e: MouseEvent<HTMLElement>, url: string) => {\n    e.stopPropagation()\n    return window.open(url, '_blank')\n  }\n  const onDetails = useCallback(\n    () => to(`/${platform}/${symbol}`),\n    [to, platform, symbol],\n  )\n\n  return (\n    <Card\n      cover={<img alt={symbol} src={image} />}\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n      onClick={onDetails}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"end\">\n        <Col span={24}>\n          <Typography.Title level={5} ellipsis>\n            {name}\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph ellipsis={{ rows: 2 }}>\n            {description}\n          </Typography.Paragraph>\n        </Col>\n        <Col>\n          <Space size={0}>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"earth-outline\" />}\n              onClick={(e) => onSocialMedia(e, website)}\n              disabled={!website}\n            />\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"logo-twitter\" />}\n              onClick={(e) => onSocialMedia(e, twitter)}\n              disabled={!twitter}\n            />\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"logo-discord\" />}\n              onClick={(e) => onSocialMedia(e, discord)}\n              disabled={!discord}\n            />\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CollectionCard\n","const SUFFIX = '-offset'\n\nclass Offset {\n  private _offset: Record<string, number>\n  constructor() {\n    this._offset = {}\n  }\n\n  private key = (key: string) => {\n    if (!key) throw new Error('The key cannot be empty.')\n    return key + SUFFIX\n  }\n\n  set = (key: string, offset: number) => {\n    const k = this.key(key)\n    this._offset[k] = offset\n  }\n\n  get = (key: string) => {\n    const k = this.key(key)\n    return this._offset[k] || 0\n  }\n}\n\nexport default Offset\n","import { Transaction } from '@solana/web3.js'\nimport { Net } from '@sentre/senhub'\nimport { account } from '@senswap/sen-js'\nimport axios from 'axios'\n\nimport Offset from './offset'\n\nexport type MagicEdenCollection = {\n  categories: string[]\n  description: string\n  discord: string\n  image: string\n  name: string\n  symbol: string\n  twitter: string\n  website: string\n}\n\nexport type MagicEdenRarity = Record<\n  'moonrank' | 'howrare',\n  {\n    rank: number\n  }\n>\n\nexport type MagicEdenListingNFT = {\n  pdaAddress: string\n  auctionHouse: string\n  tokenAddress: string\n  tokenMint: string\n  seller: string\n  tokenSize: number\n  price: number\n  rarity: Partial<MagicEdenRarity>\n  extra: {\n    img: string\n  }\n}\n\nexport type MagicEdenCreator = {\n  address: string\n  share: number\n}\n\nexport type MagicEdenAttribute = {\n  trait_type: string\n  value: string\n}\n\nexport type MagicEdenFile = {\n  uri: string\n  type: 'image/jpeg' | 'image/png' | 'image/gif' | 'video/mp4'\n}\n\nexport type MagicEdenNFTMetadata = {\n  mintAddress: string\n  owner: string\n  supply: number\n  collection: string\n  name: string\n  updateAuthority: string\n  primarySaleHappened: number\n  sellerFeeBasisPoints: number\n  image: string\n  animationUrl: string\n  externalUrl: string\n  attributes: MagicEdenAttribute[]\n  properties: {\n    files: MagicEdenFile[]\n    category: string\n    creators: MagicEdenCreator[]\n  }\n}\n\nexport type MagicEdenBuyNow = {\n  buyerAddress: string\n  sellerAddress: string\n  auctionHouseAddress: string\n  mintAddress: string\n  accountAddress?: string\n  price: number\n  buyerReferralAddress?: string\n  sellerReferralAddress?: string\n  buyerExpiry?: number\n  sellerExpiry?: number\n}\n\nclass MagicEdenSDK extends Offset {\n  public network: Net\n  public endpoint: string\n\n  constructor(network: Net) {\n    super()\n    this.network = network\n    this.endpoint = MagicEdenSDK.ENDPOINTS[this.network]\n  }\n\n  static CORS = 'https://cors.sentre.io/magic-eden/'\n  static ENDPOINTS: Record<Net, string> = {\n    devnet: 'https://api-devnet.magiceden.dev/v2',\n    testnet: 'https://api-testnet.magiceden.dev/v2',\n    mainnet: 'https://api-mainnet.magiceden.dev/v2',\n  }\n\n  private getURL = ({\n    path,\n    params,\n    auth = false,\n    verbose = false,\n  }: {\n    path: string\n    params?: Record<string, any>\n    auth?: boolean\n    verbose?: boolean\n  }) => {\n    if (params) for (const key in params) params[key] = params[key].toString()\n    const origin = this.endpoint + path\n    const searchParams = params ? new URLSearchParams(params).toString() : ''\n    if (verbose) console.log(`${origin}?${searchParams}`)\n    const encodedURI = encodeURIComponent(`${origin}?${searchParams}`)\n    return MagicEdenSDK.CORS + encodedURI + `?auth=${auth}`\n  }\n\n  getCollection = async (symbol: string) => {\n    if (!symbol) throw new Error('Invalid symbol')\n    const url = this.getURL({ path: `/collections/${symbol}` })\n    const { data } = await axios.get(url)\n    if (!data) throw new Error('Invalid symbol')\n    return data as MagicEdenCollection\n  }\n\n  getCollections = async (offset = 0, limit = 200) => {\n    const params = { offset, limit }\n    const url = this.getURL({ path: '/collections', params })\n    const { data } = await axios.get(url)\n    return (data || []) as MagicEdenCollection[]\n  }\n\n  nextCollections = async (limit = 200) => {\n    const offset = this.get('collections')\n    const data = await this.getCollections(offset, limit)\n    this.set('collections', offset + data.length)\n    return data\n  }\n\n  getListingNFTs = async (symbol: string, offset = 0, limit = 20) => {\n    const params = { offset, limit }\n    const url = this.getURL({ path: `/collections/${symbol}/listings`, params })\n    const { data } = await axios.get(url)\n    return (data || []) as MagicEdenListingNFT[]\n  }\n\n  nextListingNFTs = async (symbol: string, limit = 20) => {\n    const offset = this.get(symbol)\n    const data = await this.getListingNFTs(symbol, offset, limit)\n    this.set(symbol, offset + data.length)\n    return data\n  }\n\n  getNFTMetadata = async (mintAddress: string) => {\n    if (!account.isAddress(mintAddress)) throw new Error('Invalid mint address')\n    const url = this.getURL({ path: `/tokens/${mintAddress}` })\n    const { data } = await axios.get(url)\n    if (!data) throw new Error('Invalid mint address')\n    return data as MagicEdenNFTMetadata\n  }\n\n  // In process\n  // M2mx93ekt1fmXSVkTrUL9xVFHkmME8HTUi5Cyc5aF7K\n  // https://gist.github.com/tuphan-dn/ec00b4f54341120959e2b5deb65c0f36\n  buyNow = async ({\n    buyerAddress,\n    sellerAddress,\n    auctionHouseAddress = '',\n    mintAddress,\n    accountAddress,\n    price,\n    buyerReferralAddress = '',\n    sellerReferralAddress = '',\n    buyerExpiry = 0,\n    sellerExpiry = 0,\n  }: MagicEdenBuyNow) => {\n    if (!account.isAddress(buyerAddress))\n      throw new Error('Invalid buyer address')\n    if (!account.isAddress(sellerAddress))\n      throw new Error('Invalid seller address')\n    if (!account.isAddress(mintAddress)) throw new Error('Invalid mint address')\n    if (!account.isAddress(accountAddress))\n      throw new Error('Invalid account address')\n\n    const params = {\n      buyer: buyerAddress,\n      seller: sellerAddress,\n      auctionHouseAddress,\n      tokenMint: mintAddress,\n      tokenATA: accountAddress,\n      price,\n      buyerReferral: buyerReferralAddress,\n      sellerReferral: sellerReferralAddress,\n      buyerExpiry,\n      sellerExpiry,\n    }\n    const url = this.getURL({\n      path: '/instructions/buy_now',\n      params,\n      auth: true,\n      verbose: true,\n    })\n    const { data } = await axios.get(url)\n    return Transaction.from(Buffer.from(data.txSigned))\n  }\n}\n\nexport default MagicEdenSDK\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport MagicEdenSDK, { MagicEdenCollection } from 'sdk/magicEdenSDK'\nimport { net } from '@sentre/senhub'\n\n/**\n * Interface & Utility\n */\n\nexport type MagicEdenState = Record<string, MagicEdenCollection>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'magicEden'\nconst initialState: MagicEdenState = {}\nexport const magicEdenSDK = new MagicEdenSDK(net)\n\n/**\n * Actions\n */\n\nexport const nextCollections = createAsyncThunk(\n  `${NAME}/nextCollections`,\n  async (limit: number = 12) => {\n    const data = await magicEdenSDK.nextCollections(limit)\n    const collections: MagicEdenState = {}\n    for (const collection of data) collections[collection.symbol] = collection\n    return collections\n  },\n)\n\nexport const getCollection = createAsyncThunk(\n  `${NAME}/getCollection`,\n  async (symbol: string) => {\n    const data = await magicEdenSDK.getCollection(symbol)\n    return { [symbol]: data }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        nextCollections.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getCollection.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport MoreButton from 'components/moreButton'\nimport CollectionCard from './collectionCard'\n\nimport { AppDispatch, AppState } from 'model'\nimport { NFTPlatform } from 'sdk'\nimport { nextCollections } from 'model/magicEden.controller'\n\nexport type CollectionListProps = { platform: NFTPlatform; more?: boolean }\n\nconst CollectionList = ({ platform, more = true }: CollectionListProps) => {\n  const [loading, setLoading] = useState(false)\n  const { [platform]: collections } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onMore = useCallback(async () => {\n    setLoading(true)\n    try {\n      await dispatch(nextCollections())\n    } catch (er: any) {\n      return window.notify({ type: 'warning', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    if (Object.keys(collections).length < 12) onMore()\n  }, [collections, onMore])\n\n  return (\n    <Row gutter={[24, 24]}>\n      {Object.keys(collections).map((symbol, i) => (\n        <Col key={i} xs={12} sm={8} lg={6} xl={4} xxl={3}>\n          <CollectionCard platform={platform} symbol={symbol} />\n        </Col>\n      ))}\n      {more && (\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <MoreButton onMore={onMore} loading={loading} />\n            </Col>\n          </Row>\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nexport default CollectionList\n","import MagicEdenLogo from 'static/images/magic-eden-logo.jpeg'\n\nexport type NFTPlatform = 'magicEden'\n\nexport const PLATFORMS: NFTPlatform = 'magicEden'\n\nexport const PLATFORM_NAMES: Record<NFTPlatform, string> = {\n  magicEden: 'Magic Eden',\n}\n\nexport const PLATFORM_LOGOS: Record<NFTPlatform, string> = {\n  magicEden: MagicEdenLogo,\n}\n","import { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { NFTPlatform, PLATFORM_LOGOS, PLATFORM_NAMES } from 'sdk'\n\nexport const usePlatform = () => {\n  const { platform } = useParams<{ platform: NFTPlatform }>()\n  const name = useMemo(() => PLATFORM_NAMES[platform], [platform])\n  const logo = useMemo(() => PLATFORM_LOGOS[platform], [platform])\n\n  return { platform, name, logo }\n}\n","import { useCallback } from 'react'\n\nimport { Avatar, Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CollectionList from './collectionList'\n\nimport { useRoute } from 'hooks/useRoute'\nimport { usePlatform } from 'hooks/usePlatform'\n\nconst Collections = () => {\n  const { platform, name, logo } = usePlatform()\n  const { to } = useRoute()\n\n  const onHome = useCallback(() => to('/'), [to])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[12, 12]} wrap={false} align=\"middle\">\n          <Col flex=\"auto\">\n            <Button icon={<IonIcon name=\"home-outline\" />} onClick={onHome}>\n              Home\n            </Button>\n          </Col>\n          <Col>\n            <Space>\n              <Typography.Title type=\"secondary\" level={3}>\n                {name}\n              </Typography.Title>\n              <Avatar src={logo} />\n              <Typography.Title type=\"secondary\" level={3}>\n                /\n              </Typography.Title>\n              <Typography.Title type=\"secondary\" level={3}>\n                Collections\n              </Typography.Title>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <CollectionList platform={platform} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Collections\n","import { Avatar, Card, Space, Tooltip, Typography } from 'antd'\n\nimport { MagicEdenRarity } from 'sdk/magicEdenSDK'\n\nexport const RANKS: Record<keyof MagicEdenRarity, string> = {\n  moonrank: 'https://moonrank.static/moonrank_icon.png',\n  howrare: 'https://howrare.com/img/logo.png',\n}\n\nexport type RarityProps = {\n  name: keyof MagicEdenRarity\n  rank: number\n}\n\nconst Rarity = ({ name, rank }: RarityProps) => {\n  return (\n    <Tooltip title={name}>\n      <Card\n        bodyStyle={{ padding: 8, cursor: 'pointer' }}\n        style={{ minWidth: 80, maxWidth: 96 }}\n      >\n        <Space>\n          <Avatar shape=\"circle\" size=\"small\" src={RANKS[name]} />\n          <Space>\n            <Typography.Text>{rank}</Typography.Text>\n          </Space>\n        </Space>\n      </Card>\n    </Tooltip>\n  )\n}\nexport default Rarity\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { MagicEdenNFTMetadata } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from './magicEden.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type MetadataState = Record<string, MagicEdenNFTMetadata>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'metadata'\nconst initialState: MetadataState = {}\n\n/**\n * Actions\n */\n\nexport const getNFTMetadata = createAsyncThunk<\n  Partial<MetadataState>,\n  { mintAddress: string; force?: boolean },\n  { state: any }\n>(\n  `${NAME}/getNFTMetadata`,\n  async ({ mintAddress, force = false }, { getState }) => {\n    const {\n      metadata: { [mintAddress]: currentData },\n    } = getState()\n    if (currentData && !force) return { [mintAddress]: currentData }\n    const data = await magicEdenSDK.getNFTMetadata(mintAddress)\n    return { [mintAddress]: data }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getNFTMetadata.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Button, Card, Col, Row, Skeleton, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Rarity from 'components/rarity'\n\nimport { AppDispatch, AppState } from 'model'\nimport { NFTPlatform } from 'sdk'\nimport { getNFTMetadata } from 'model/metadata.controller'\nimport { magicEdenSDK } from 'model/magicEden.controller'\nimport { useWallet } from '@sentre/senhub'\nimport { sendAndConfirm } from 'sdk/jupAgSDK'\n\nexport type NFTCardProps = {\n  platform: NFTPlatform\n  symbol: string\n  mintAddress: string\n}\n\nconst NFTCard = ({ platform, symbol, mintAddress }: NFTCardProps) => {\n  const [loading, setLoading] = useState(false)\n  const {\n    listing: {\n      [symbol]: { [mintAddress]: nft },\n    },\n    metadata: { [mintAddress]: metadata },\n  } = useSelector((state: AppState) => state)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const {\n    seller,\n    price,\n    tokenMint,\n    auctionHouse,\n    rarity,\n    extra: { img },\n  } = nft\n  const { name, image } = metadata || {}\n\n  const onBuy = useCallback(async () => {\n    try {\n      setLoading(true)\n      const { splt, wallet } = window.sentre\n      const accountAddress = await splt.deriveAssociatedAddress(\n        walletAddress,\n        tokenMint,\n      )\n      const tx = await magicEdenSDK.buyNow({\n        buyerAddress: walletAddress,\n        sellerAddress: seller,\n        auctionHouseAddress: auctionHouse,\n        mintAddress: tokenMint,\n        accountAddress,\n        price,\n      })\n      const signedTx = await wallet.signTransaction(tx)\n      const [txId] = await sendAndConfirm([signedTx])\n      return console.log(txId)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [walletAddress, seller, price, tokenMint, auctionHouse])\n\n  useEffect(() => {\n    if (account.isAddress(mintAddress))\n      dispatch(getNFTMetadata({ mintAddress }))\n  }, [dispatch, mintAddress])\n\n  return (\n    <Card\n      cover={<img alt={name} src={img || image} />}\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          {name ? (\n            <Typography.Title level={5} ellipsis>\n              {name}\n            </Typography.Title>\n          ) : (\n            <Skeleton\n              paragraph={{ rows: 1 }}\n              title={false}\n              round\n              active\n              loading\n            />\n          )}\n        </Col>\n        <Col span={24}>\n          <Space>\n            {rarity?.moonrank && (\n              <Rarity name=\"moonrank\" rank={rarity?.moonrank.rank} />\n            )}\n            {rarity?.howrare && (\n              <Rarity name=\"howrare\" rank={rarity?.howrare.rank} />\n            )}\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]} align=\"middle\" wrap={false}>\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>{price} SOL</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"card-outline\" />}\n                onClick={onBuy}\n                loading={loading}\n              >\n                Buy\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default NFTCard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { MagicEdenListingNFT } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from './magicEden.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type ListingNFTs = Record<string, MagicEdenListingNFT>\nexport type NFTState = Record<string, ListingNFTs>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'listing'\nconst initialState: NFTState = {}\n\n/**\n * Actions\n */\n\nexport const nextListingNFTs = createAsyncThunk<\n  Partial<NFTState>,\n  { symbol: string; limit?: number },\n  { state: any }\n>(`${NAME}/nextListingNFTs`, async ({ symbol, limit = 12 }, { getState }) => {\n  const {\n    listing: { [symbol]: prevNFTs },\n  } = getState()\n  const data = await magicEdenSDK.nextListingNFTs(symbol, limit)\n  const nfts: ListingNFTs = {}\n  for (const nft of data) nfts[nft.tokenMint] = nft\n  return { [symbol]: { ...(prevNFTs || {}), ...nfts } }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      nextListingNFTs.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MoreButton from 'components/moreButton'\nimport NFTCard from './nftCard'\n\nimport { useCollection } from 'hooks/useCollection'\nimport { useRoute } from 'hooks/useRoute'\nimport { AppDispatch, AppState } from 'model'\nimport { getCollection } from 'model/magicEden.controller'\nimport { nextListingNFTs } from 'model/listing.controller'\n\nconst Collection = () => {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const { platform, symbol } = useCollection()\n  const {\n    [platform]: { [symbol]: collection },\n    listing: { [symbol]: listingNFTs },\n  } = useSelector((state: AppState) => state)\n  const { to, back } = useRoute()\n  const { action } = useHistory()\n\n  const onBack = useCallback(() => {\n    if (action !== 'PUSH') return to(`/${platform}`)\n    return back()\n  }, [to, back, platform, action])\n\n  const onMore = useCallback(async () => {\n    setLoading(true)\n    try {\n      await dispatch(nextListingNFTs({ symbol }))\n    } catch (er: any) {\n      return window.notify({ type: 'warning', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [dispatch, symbol])\n\n  useEffect(() => {\n    if (!collection && symbol) dispatch(getCollection(symbol))\n  }, [dispatch, collection, symbol])\n\n  useEffect(() => {\n    if (!listingNFTs) onMore()\n  }, [onMore, listingNFTs])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Button icon={<IonIcon name=\"arrow-back-outline\" />} onClick={onBack}>\n          Back\n        </Button>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          {Object.values(listingNFTs || {}).map(({ tokenMint }, i) => (\n            <Col key={i} xs={12} sm={8} lg={6} xl={4} xxl={3}>\n              <NFTCard\n                platform={platform}\n                symbol={symbol}\n                mintAddress={tokenMint}\n              />\n            </Col>\n          ))}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col>\n            <MoreButton onMore={onMore} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Collection\n","import { useParams } from 'react-router-dom'\n\nimport { usePlatform } from './usePlatform'\n\nexport const useCollection = () => {\n  const { symbol } = useParams<{ symbol: string }>()\n  const { platform } = usePlatform()\n\n  return { platform, symbol }\n}\n","import { Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Home from './home'\nimport Collections from './collections'\nimport Collection from './collection'\n\nimport { useRoute } from 'hooks/useRoute'\n\nimport 'static/styles/light.less'\nimport 'static/styles/dark.less'\n\nconst View = () => {\n  const { extend } = useRoute()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Switch>\n          <Route exact path={extend('/')} component={Home} />\n          <Route exact path={extend('/:platform')} component={Collections} />\n          <Route\n            exact\n            path={extend('/:platform/:symbol')}\n            component={Collection}\n          />\n        </Switch>\n      </Col>\n      <Col span={24} />\n    </Row>\n  )\n}\n\nexport default View\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Connection, AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport configs from 'configs'\n\nconst {\n  sol: { node, metaplexAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type State = {}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(`${NAME}/getAccounts`, async () => {\n  const connection = new Connection(node)\n  const programId = new PublicKey(metaplexAddress)\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: 679 },\n        {\n          memcmp: {\n            offset: 0,\n            bytes: metaplexAddress,\n          },\n        },\n      ],\n    })\n  // let bulk: any = {}\n  // value.forEach(({ pubkey, account: { data: buf } }) => {\n  //   const address = pubkey.toBase58()\n  //   const data = interDao.parseDaoData(buf)\n  //   bulk[address] = { ...data }\n  // })\n  console.log(value)\n  return {}\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getAccounts.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'model/devTools'\n\nimport main from 'model/main.controller'\nimport magicEden from 'model/magicEden.controller'\nimport listing from 'model/listing.controller'\nimport metadata from 'model/metadata.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n    magicEden,\n    listing,\n    metadata,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { WalletProvider, UIProvider } from '@sentre/senhub'\n\nimport View from 'view'\n\nimport model from 'model'\nimport configs from 'configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <Provider store={model}>\n          <View />\n        </Provider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n\nexport * from 'static.app'\n"],"names":["Object","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","obj","__esModule","panels","shared","appId","process","url","development","staging","production","devnet","node","rpc","metaplexAddress","testnet","mainnet","manifest","env","sol","net","configs","useRoute","history","useHistory","root","extend","useCallback","subroute","to","push","back","goBack","connection","Connection","sendAndConfirm","async","txIds","signedTx","signedTxs","txId","sendRawTransaction","serialize","skipPreflight","preflightCommitment","confirmTransaction","loading","setLoading","useState","wallet","address","walletAddress","useWallet","onDetails","platform","onJupAg","amount","txs","cluster","data","fetch","json","inputAmount","price","jupiter","Jupiter","user","PublicKey","routesInfos","routeInfo","computeRoutes","inputMint","outputMint","slippage","forceFetch","console","log","outAmount","LAMPORTS_PER_SOL","transactions","setupTransaction","swapTransaction","cleanupTransaction","exchange","filter","tx","swapToSOL","window","sentre","signAllTransactions","er","notify","type","description","message","Row","gutter","Col","span","Space","Button","onClick","icon","name","onMore","disabled","symbol","image","website","twitter","discord","useSelector","state","onSocialMedia","e","stopPropagation","open","Card","cover","alt","src","bodyStyle","padding","bordered","hoverable","justify","Typography","level","ellipsis","rows","size","constructor","_offset","key","Error","set","offset","k","this","MagicEdenSDK","Offset","network","super","endpoint","getURL","path","params","auth","verbose","toString","origin","searchParams","URLSearchParams","encodedURI","encodeURIComponent","CORS","getCollection","axios","getCollections","limit","nextCollections","length","getListingNFTs","nextListingNFTs","getNFTMetadata","account","mintAddress","buyNow","buyerAddress","sellerAddress","auctionHouseAddress","accountAddress","buyerReferralAddress","sellerReferralAddress","buyerExpiry","sellerExpiry","buyer","seller","tokenMint","tokenATA","buyerReferral","sellerReferral","Transaction","Buffer","from","txSigned","ENDPOINTS","NAME","magicEdenSDK","createAsyncThunk","collections","collection","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","more","dispatch","useDispatch","useEffect","keys","map","i","xs","sm","lg","xl","xxl","PLATFORM_NAMES","magicEden","PLATFORM_LOGOS","MagicEdenLogo","usePlatform","useParams","useMemo","logo","onHome","wrap","align","flex","Avatar","RANKS","moonrank","howrare","rank","Tooltip","title","cursor","style","minWidth","maxWidth","shape","force","getState","metadata","currentData","listing","nft","auctionHouse","rarity","extra","img","onBuy","splt","deriveAssociatedAddress","signTransaction","Skeleton","paragraph","round","active","prevNFTs","nfts","useCollection","listingNFTs","action","onBack","values","Switch","Route","exact","component","Home","Collections","Collection","BigInt","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","proto","getPrototypeOf","isPlainObject","BN","isBuffer","getAccounts","programId","getProgramAccounts","filters","dataSize","memcmp","bytes","configureStore","middleware","getDefaultMiddleware","devTools","reducer","main","Page","UIProvider","antd","prefixCls","WalletProvider","Provider","store","model"],"sourceRoot":""}