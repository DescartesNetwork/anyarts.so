{"version":3,"file":"static/js/src_bootstrap_app_tsx-src_static_images_magic-eden-logo_jpeg.06d1eb71.chunk.js","mappings":"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","sources":["static.app.tsx","components/moreButton.tsx","sdk/offset.ts","sdk/magicEdenSDK.ts","model/collections.controller.tsx","static/images/nft-default.svg","hooks/useCollection.ts","components/collectionCard/social.tsx","model/stat.controller.tsx","hooks/useStat.ts","components/collectionCard/index.tsx","model/category.controller.tsx","view/collections/recentList.tsx","view/collections/hotList.tsx","view/collections/search.tsx","configs/manifest.config.ts","configs/pagination.config.ts","configs/payment.config.ts","configs/index.ts","model/viewed.controller.ts","view/collections/myNFTs/viewedList.tsx","model/mine.controller.tsx","static/images/sol-logo.svg","components/myNFTCard/index.tsx","view/collections/myNFTs/index.tsx","view/collections/index.tsx","components/rarity.tsx","view/nftPlugin/magicEdenTitle/index.tsx","view/nftPlugin/cardNFT/imageNFT.tsx","model/metadata.controller.tsx","hooks/useMetadata.ts","view/nftPlugin/cardNFT/index.tsx","view/nftPlugin/tokenToBuy/index.tsx","hooks/useAccountBalance.ts","hooks/usePriceExchange.tsx","view/nftPlugin/index.tsx","components/listingNFTCard.tsx","model/listing.controller.tsx","view/collection/index.tsx","components/mainnetOnly.tsx","components/heroBanner.tsx","view/popularCollections/popularCollectionCard.tsx","model/popularCollections.controller.tsx","view/popularCollections/index.tsx","view/index.tsx","model/devTools.ts","model/index.ts","bootstrap.app.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel1.png\"));\n\nvar _panel2 = _interopRequireDefault(require(\"./static/images/panel2.png\"));\n\nvar _panel3 = _interopRequireDefault(require(\"./static/images/panel3.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.png\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel.default, _panel2.default, _panel3.default];\nexports.panels = panels;","import { Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nexport type MoreButtonProps = {\n  onMore?: () => void\n  loading?: boolean\n  disabled?: boolean\n}\n\nconst MoreButton = ({\n  onMore = () => {},\n  loading = false,\n  disabled = false,\n}: MoreButtonProps) => {\n  return (\n    <Button\n      type=\"text\"\n      size=\"large\"\n      onClick={onMore}\n      loading={loading}\n      disabled={disabled}\n      icon={<IonIcon name=\"caret-down-outline\" />}\n    >\n      More\n    </Button>\n  )\n}\n\nexport default MoreButton\n","const SUFFIX = '-offset'\n\nclass Offset {\n  private _offset: Record<string, number>\n  constructor() {\n    this._offset = {}\n  }\n\n  private key = (key: string) => {\n    if (!key) throw new Error('The key cannot be empty.')\n    return key + SUFFIX\n  }\n\n  set = (key: string, offset: number) => {\n    const k = this.key(key)\n    this._offset[k] = offset\n  }\n\n  get = (key: string) => {\n    const k = this.key(key)\n    return this._offset[k] || 0\n  }\n}\n\nexport default Offset\n","import { Transaction, Connection } from '@solana/web3.js'\nimport { util } from '@sentre/senhub'\nimport axios from 'axios'\n\nimport Offset from './offset'\nimport {\n  MagicEdenCollection,\n  MagicEdenPopularCollection,\n  MagicEdenListingNFT,\n  MagicEdenNFTMetadata,\n  ListStatus,\n  MagicEdenMyNFT,\n  MagicEdenCollectionStat,\n} from './types'\n\nexport const MIN_SEARCH_LENGTH = 3\n\nclass MagicEdenSDK extends Offset {\n  private api: string = 'https://api-mainnet.magiceden.dev/v2'\n  private stat: string = 'https://stats-mainnet.magiceden.io/collection_stats'\n  private connection: Connection\n  private service: string = 'https://cors.sentre.io/magic-eden'\n  private referralAddress: string =\n    '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e'\n  private auctionHouseAddress: string =\n    'E8cU1WiRWjanGxmn96ewBgk9vPTcL6AEZ1t6F6fkgUWe'\n\n  constructor(rpc: string) {\n    super()\n    this.connection = new Connection(rpc)\n  }\n\n  private getAPI = ({\n    path,\n    params,\n    auth = false,\n  }: {\n    path: string\n    params?: Record<string, any>\n    auth?: boolean\n  }) => {\n    if (params) for (const key in params) params[key] = params[key].toString()\n    const origin = this.api + path\n    const searchParams = params\n      ? `?${new URLSearchParams(params).toString()}`\n      : ''\n    const encodedURI = encodeURIComponent(`${origin}${searchParams}`)\n    return `${this.service}/forward/${encodedURI}?auth=${auth}`\n  }\n\n  private getStat = ({\n    path,\n    params,\n  }: {\n    path: string\n    params?: Record<string, any>\n  }) => {\n    if (params) for (const key in params) params[key] = params[key].toString()\n    const origin = this.stat + path\n    const searchParams = params\n      ? `?${new URLSearchParams(params).toString()}`\n      : ''\n    const encodedURI = encodeURIComponent(`${origin}${searchParams}`)\n    return `${this.service}/forward/${encodedURI}`\n  }\n\n  getMyNFTs = async (\n    walletAddress: string,\n    listStatus: ListStatus = 'both',\n  ) => {\n    if (!util.isAddress(walletAddress))\n      throw new Error('Invalid wallet address')\n    const offset = 0\n    const limit = 500\n    const url = this.getAPI({\n      path: `/wallets/${walletAddress}/tokens`,\n      params: {\n        offset,\n        limit,\n        listStatus,\n      },\n    })\n    const { data } = await axios.get(url)\n    if (!data) throw new Error('Invalid wallet address')\n    return data as MagicEdenMyNFT[]\n  }\n\n  getCollection = async (symbol: string) => {\n    if (!symbol) throw new Error('Invalid symbol')\n    const url = `${this.service}/collections/${symbol}`\n    const { data } = await axios.get(url)\n    if (!data) throw new Error('Invalid symbol')\n    return data as MagicEdenCollection\n  }\n\n  getCollectionStat = async (symbol: string) => {\n    if (!symbol) throw new Error('Invalid symbol')\n    const url = this.getAPI({ path: `/collections/${symbol}/stats` })\n    const { data } = await axios.get(url)\n    if (!data) throw new Error('Invalid symbol')\n    return data as MagicEdenCollectionStat\n  }\n\n  getCollections = async (offset = 0, limit = 50) => {\n    const url = `${this.service}/collections?offset=${offset}&limit=${limit}`\n    const { data } = await axios.get(url)\n    return (data || []) as MagicEdenCollection[]\n  }\n\n  getPopularCollections = async (window = '1d', limit = 12) => {\n    const url = this.getStat({\n      path: '/popular_collections/sol',\n      params: {\n        window,\n        limit,\n      },\n    })\n    const { data } = await axios.get(url)\n    return (data || []) as MagicEdenPopularCollection[]\n  }\n\n  nextCollections = async (limit = 50) => {\n    const offset = this.get('collections')\n    const data = await this.getCollections(offset, limit)\n    this.set('collections', offset + data.length)\n    return data\n  }\n\n  searchCollections = async (search = '') => {\n    if (!search || search.length <= MIN_SEARCH_LENGTH) return undefined\n    const offset = 0\n    const limit = 5\n    const url = `${this.service}/collections?search=${search}&offset=${offset}&limit=${limit}`\n    const { data } = await axios.get(url)\n    return (data || []) as MagicEdenCollection[]\n  }\n\n  getListingNFTs = async (symbol: string, offset = 0, limit = 20) => {\n    const params = { offset, limit }\n    const url = this.getAPI({ path: `/collections/${symbol}/listings`, params })\n    const { data } = await axios.get(url)\n    return (data || []) as MagicEdenListingNFT[]\n  }\n\n  nextListingNFTs = async (symbol: string, limit = 20) => {\n    const offset = this.get(symbol)\n    const data = await this.getListingNFTs(symbol, offset, limit)\n    this.set(symbol, offset + data.length)\n    return data\n  }\n\n  getNFTMetadata = async (mintAddress: string) => {\n    if (!util.isAddress(mintAddress)) throw new Error('Invalid mint address')\n    const url = this.getAPI({ path: `/tokens/${mintAddress}` })\n    const { data } = await axios.get(url)\n    if (!data) throw new Error('Invalid mint address')\n    return data as MagicEdenNFTMetadata\n  }\n\n  buyNow = async ({\n    buyerAddress,\n    sellerAddress,\n    auctionHouseAddress,\n    mintAddress,\n    price,\n    sellerReferralAddress,\n  }: {\n    buyerAddress: string\n    sellerAddress: string\n    auctionHouseAddress: string\n    mintAddress: string\n    price: number\n    sellerReferralAddress: string\n  }) => {\n    if (!util.isAddress(buyerAddress)) throw new Error('Invalid buyer address')\n    if (!util.isAddress(sellerAddress))\n      throw new Error('Invalid seller address')\n    if (!util.isAddress(mintAddress)) throw new Error('Invalid mint address')\n\n    const accountAddress = await util.deriveAssociatedAddress(\n      sellerAddress,\n      mintAddress,\n    )\n    const params = {\n      buyer: buyerAddress,\n      seller: sellerAddress,\n      auctionHouseAddress,\n      tokenMint: mintAddress,\n      tokenATA: accountAddress,\n      price,\n      buyerReferral: this.referralAddress,\n      sellerReferral: sellerReferralAddress,\n      buyerExpiry: 0,\n      sellerExpiry: -1,\n    }\n    const url = this.getAPI({\n      path: '/instructions/buy_now',\n      params,\n      auth: true,\n    })\n    const { data } = await axios.get(url)\n    return Transaction.from(Buffer.from(data.txSigned))\n  }\n\n  sell = async ({\n    sellerAddress,\n    mintAddress,\n    price,\n  }: {\n    sellerAddress: string\n    mintAddress: string\n    price: number\n  }) => {\n    if (!util.isAddress(sellerAddress))\n      throw new Error('Invalid seller address')\n    if (!util.isAddress(mintAddress)) throw new Error('Invalid mint address')\n\n    const accountAddress = await util.deriveAssociatedAddress(\n      sellerAddress,\n      mintAddress,\n    )\n    const params = {\n      seller: sellerAddress,\n      auctionHouseAddress: this.auctionHouseAddress,\n      tokenMint: mintAddress,\n      tokenAccount: accountAddress,\n      price,\n      sellerReferral: this.referralAddress,\n      expiry: -1,\n    }\n    const url = this.getAPI({\n      path: '/instructions/sell',\n      params,\n      auth: true,\n    })\n    const { data } = await axios.get(url)\n    return Transaction.from(Buffer.from(data.txSigned))\n  }\n\n  cancel = async ({\n    sellerAddress,\n    mintAddress,\n    price,\n  }: {\n    sellerAddress: string\n    mintAddress: string\n    price: number\n  }) => {\n    if (!util.isAddress(sellerAddress))\n      throw new Error('Invalid seller address')\n    if (!util.isAddress(mintAddress)) throw new Error('Invalid mint address')\n\n    const accountAddress = await util.deriveAssociatedAddress(\n      sellerAddress,\n      mintAddress,\n    )\n    const params = {\n      seller: sellerAddress,\n      auctionHouseAddress: this.auctionHouseAddress,\n      tokenMint: mintAddress,\n      tokenAccount: accountAddress,\n      price,\n      sellerReferral: this.referralAddress,\n      expiry: -1,\n    }\n    const url = this.getAPI({\n      path: '/instructions/sell_cancel',\n      params,\n      auth: true,\n    })\n    const { data } = await axios.get(url)\n    return Transaction.from(Buffer.from(data.txSigned))\n  }\n\n  sendAndConfirm = async (signedTxs: Transaction[]) => {\n    let txIds = []\n    for (const signedTx of signedTxs) {\n      const txId = await this.connection.sendRawTransaction(\n        signedTx.serialize(),\n        {\n          skipPreflight: true,\n          preflightCommitment: 'confirmed',\n        },\n      )\n      await this.connection.confirmTransaction(txId)\n      txIds.push(txId)\n    }\n    return txIds\n  }\n}\n\nexport * from './types'\nexport default MagicEdenSDK\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { rpc } from '@sentre/senhub'\n\nimport MagicEdenSDK, { MagicEdenCollection } from 'sdk/magicEdenSDK'\n\n/**\n * Interface & Utility\n */\n\nexport type MagicEdenState = Record<string, MagicEdenCollection>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'collections'\nconst initialState: MagicEdenState = {}\nexport const magicEdenSDK = new MagicEdenSDK(rpc)\n\n/**\n * Actions\n */\n\nexport const nextCollections = createAsyncThunk(\n  `${NAME}/nextCollections`,\n  async (limit: number = 12) => {\n    const data = await magicEdenSDK.nextCollections(limit)\n    const collections: MagicEdenState = {}\n    for (const collection of data) collections[collection.symbol] = collection\n    return collections\n  },\n)\n\nexport const getCollection = createAsyncThunk<\n  MagicEdenState,\n  { symbol: string; force?: boolean },\n  { state: { collections: MagicEdenState } }\n>(`${NAME}/getCollection`, async ({ symbol, force = false }, { getState }) => {\n  const {\n    collections: { [symbol]: currentData },\n  } = getState()\n  if (currentData && !force) return { [symbol]: currentData }\n  const data = await magicEdenSDK.getCollection(symbol)\n  return { [symbol]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        nextCollections.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getCollection.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","var _rect, _path;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgNftDefault(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 84,\n    height: 84,\n    viewBox: \"0 0 84 84\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 84,\n    height: 84,\n    fill: \"#767170\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.5716 32H33.4286C32.5196 32.001 31.6481 32.3625 31.0053 33.0053C30.3625 33.6481 30.001 34.5196 30 35.4286V49.143C30.001 50.052 30.3625 50.9235 31.0053 51.5663C31.6481 52.209 32.5196 52.5706 33.4286 52.5716H50.5716C51.4806 52.5706 52.3521 52.209 52.9949 51.5663C53.6376 50.9235 53.9992 50.052 54.0002 49.143V35.4286C53.9992 34.5196 53.6376 33.6481 52.9949 33.0053C52.3521 32.3625 51.4806 32.001 50.5716 32V32ZM46.2858 35.4286C46.7944 35.4286 47.2916 35.5794 47.7144 35.862C48.1373 36.1445 48.4669 36.5461 48.6615 37.016C48.8562 37.4859 48.9071 38.0029 48.8079 38.5017C48.7086 39.0005 48.4637 39.4587 48.1041 39.8183C47.7445 40.178 47.2863 40.4229 46.7875 40.5221C46.2887 40.6213 45.7716 40.5704 45.3018 40.3757C44.8319 40.1811 44.4303 39.8515 44.1477 39.4287C43.8652 39.0058 43.7144 38.5086 43.7144 38C43.7151 37.3183 43.9862 36.6646 44.4683 36.1825C44.9504 35.7005 45.6041 35.4293 46.2858 35.4286V35.4286ZM33.4286 50.8573C32.9739 50.8573 32.5379 50.6767 32.2164 50.3552C31.8949 50.0337 31.7143 49.5976 31.7143 49.143V45.5199L36.795 41.0038C37.2853 40.5691 37.9228 40.3375 38.5777 40.3565C39.2327 40.3754 39.8558 40.6433 40.3201 41.1056L43.7996 44.5776L37.5199 50.8573H33.4286ZM52.2859 49.143C52.2859 49.5976 52.1053 50.0337 51.7838 50.3552C51.4623 50.6767 51.0262 50.8573 50.5716 50.8573H39.9445L46.4492 44.3526C46.9098 43.9609 47.4942 43.7452 48.0987 43.7436C48.7033 43.742 49.2888 43.9548 49.7514 44.344L52.2859 46.4558V49.143Z\",\n    fill: \"#A3A1A0\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNftDefault);\nexport default __webpack_public_path__ + \"static/media/nft-default.e7d7d405622ec80c0c232699de2b2c8e.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { MagicEdenCollection } from 'sdk/types'\nimport { AppDispatch, AppState } from 'model'\nimport { getCollection } from 'model/collections.controller'\nimport EMPTY_IMAGE from 'static/images/nft-default.svg'\n\nconst EMPTY_COLLECTION: MagicEdenCollection = {\n  categories: [],\n  description: '',\n  discord: '',\n  image: EMPTY_IMAGE,\n  name: '',\n  symbol: '',\n  twitter: '',\n  website: '',\n}\n\nexport const useCollection = (symbol: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const collection = useSelector((state: AppState) => state.collections[symbol])\n\n  useEffect(() => {\n    if (!collection) dispatch(getCollection({ symbol }))\n  }, [dispatch, collection, symbol])\n\n  if (!collection) return { loading: true, collection: EMPTY_COLLECTION }\n  return { loading: false, collection }\n}\n","import { MouseEvent } from 'react'\n\nimport { Button, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { useCollection } from 'hooks/useCollection'\n\nexport type CollectionSocialProps = { symbol: string }\n\nconst CollectionSocial = ({ symbol }: CollectionSocialProps) => {\n  const {\n    collection: { website, twitter, discord },\n  } = useCollection(symbol)\n\n  const onSocialMedia = (e: MouseEvent<HTMLElement>, url: string) => {\n    e.stopPropagation()\n    return window.open(url, '_blank')\n  }\n\n  return (\n    <Space size={0}>\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"earth-outline\" />}\n        onClick={(e) => onSocialMedia(e, website)}\n        disabled={!website}\n      />\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"logo-twitter\" />}\n        onClick={(e) => onSocialMedia(e, twitter)}\n        disabled={!twitter}\n      />\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"logo-discord\" />}\n        onClick={(e) => onSocialMedia(e, discord)}\n        disabled={!discord}\n      />\n    </Space>\n  )\n}\n\nexport default CollectionSocial\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { MagicEdenCollectionStat } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from './collections.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type StatState = Record<string, MagicEdenCollectionStat>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'stat'\nconst initialState: StatState = {}\n\n/**\n * Actions\n */\n\nexport const getCollectionStat = createAsyncThunk<\n  StatState,\n  { symbol: string; force?: boolean },\n  { state: { stat: StatState } }\n>(\n  `${NAME}/getCollectionStat`,\n  async ({ symbol, force = false }, { getState }) => {\n    const {\n      stat: { [symbol]: currentData },\n    } = getState()\n    if (currentData && !force) return { [symbol]: currentData }\n    const data = await magicEdenSDK.getCollectionStat(symbol)\n    return { [symbol]: data }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getCollectionStat.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { MagicEdenCollectionStat } from 'sdk/types'\nimport { AppDispatch, AppState } from 'model'\nimport { getCollectionStat } from 'model/stat.controller'\n\nconst EMPTY_STAT: MagicEdenCollectionStat = {\n  symbol: '',\n  floorPrice: 0,\n  volumeAll: 0,\n  listedCount: 0,\n}\n\nexport const useStat = (symbol: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const stat = useSelector((state: AppState) => state.stat[symbol])\n\n  useEffect(() => {\n    if (!stat) dispatch(getCollectionStat({ symbol }))\n  }, [dispatch, stat, symbol])\n\n  if (!stat) return { loading: true, stat: EMPTY_STAT }\n  return { loading: false, stat }\n}\n","import { useCallback, MouseEvent, useMemo } from 'react'\nimport { useAppRoute, util } from '@sentre/senhub'\n\nimport { Avatar, Button, Card, Col, Row, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CollectionSocial from './social'\n\nimport { useCollection } from 'hooks/useCollection'\nimport MagicEdenLogo from 'static/images/magic-eden-logo.jpeg'\nimport './index.less'\nimport { useStat } from 'hooks/useStat'\n\nexport type CollectionCardProps = {\n  symbol: string\n  closable?: boolean\n  onClose?: (symbol: string) => void\n}\n\nconst CollectionCard = ({\n  symbol,\n  closable = false,\n  onClose = () => {},\n}: CollectionCardProps) => {\n  const {\n    loading: collectionLoading,\n    collection: { name, description, image },\n  } = useCollection(symbol)\n  const {\n    loading: statLoading,\n    stat: { floorPrice },\n  } = useStat(symbol)\n  const { to } = useAppRoute()\n\n  const loading = useMemo(\n    () => collectionLoading || statLoading,\n    [collectionLoading, statLoading],\n  )\n  const onDetails = useCallback(() => to(`/${symbol}`), [to, symbol])\n  const onMagicEden = useCallback(\n    (e: MouseEvent<HTMLElement>) => {\n      e.stopPropagation()\n      return window.open(`https://magiceden.io/marketplace/${symbol}`, '_blank')\n    },\n    [symbol],\n  )\n  const onClick = useCallback(\n    (e: MouseEvent) => {\n      e.stopPropagation()\n      return onClose(symbol)\n    },\n    [symbol, onClose],\n  )\n\n  return (\n    <Card\n      cover={\n        <div>\n          <img width=\"100%\" height=\"100%\" alt={symbol} src={image} />\n          {floorPrice && (\n            <Tooltip title=\"Floor Price\">\n              <Button\n                className=\"floor-button\"\n                icon={<IonIcon name=\"logo-solana\" />}\n              >\n                <span style={{ fontWeight: 800 }}>\n                  {util.numeric(floorPrice / 10 ** 9).format('0,0.[000]')}\n                </span>\n              </Button>\n            </Tooltip>\n          )}\n          {closable && (\n            <Button\n              shape=\"circle\"\n              className=\"close-button\"\n              icon={<IonIcon name=\"close\" />}\n              onClick={onClick}\n            />\n          )}\n        </div>\n      }\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n      onClick={onDetails}\n      loading={loading}\n      hoverable\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5} ellipsis>\n            {name}\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph ellipsis={{ rows: 2 }}>\n            {description}\n          </Typography.Paragraph>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]} align=\"middle\" wrap={false}>\n            <Col flex=\"auto\">\n              <span onClick={onMagicEden}>\n                <Avatar src={MagicEdenLogo} size={24} />\n              </span>\n            </Col>\n            <Col>\n              <CollectionSocial symbol={symbol} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CollectionCard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { magicEdenSDK } from './collections.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type Category = 'recent' | 'hot'\nexport type CategoryState = Record<Category, string[]>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'category'\nconst initialState: CategoryState = {\n  recent: [],\n  hot: [],\n}\n\n/**\n * Actions\n */\n\nexport const pushRecent = createAsyncThunk<\n  Partial<CategoryState>,\n  string[],\n  { state: { category: CategoryState } }\n>(`${NAME}/pushRecent`, async (recent, { getState }) => {\n  const {\n    category: { recent: prevRecent },\n  } = getState()\n  const newRecent = [...prevRecent]\n  for (const symbol of recent)\n    if (!newRecent.includes(symbol)) newRecent.push(symbol)\n  return { recent: newRecent }\n})\n\nexport type PopularCollectionsParams = { window: string; limit: number }\nexport const PopularCollectionsDefault: PopularCollectionsParams = {\n  window: '1d',\n  limit: 12,\n}\nexport const loadHot = createAsyncThunk<\n  Partial<CategoryState>,\n  PopularCollectionsParams | undefined,\n  { state: { category: CategoryState } }\n>(\n  `${NAME}/loadHot`,\n  async (\n    popularCollectionsParams = PopularCollectionsDefault,\n    { getState },\n  ) => {\n    const { window, limit } = {\n      ...PopularCollectionsDefault,\n      ...popularCollectionsParams,\n    }\n    const {\n      category: { hot: prevHot },\n    } = getState()\n    const data = await magicEdenSDK.getPopularCollections(window, limit)\n    const hot = data.map(({ collectionSymbol }) => collectionSymbol)\n    const newHot = [...prevHot]\n    for (const symbol of hot) if (!newHot.includes(symbol)) newHot.push(symbol)\n    return { hot: newHot }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        pushRecent.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadHot.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport MoreButton from 'components/moreButton'\nimport CollectionCard from '../../components/collectionCard'\n\nimport { AppDispatch, AppState } from 'model'\nimport { nextCollections } from 'model/collections.controller'\nimport { pushRecent } from 'model/category.controller'\n\nconst RecentList = () => {\n  const [loading, setLoading] = useState(false)\n  const recent = useSelector((state: AppState) => state.category.recent)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onMore = useCallback(async () => {\n    setLoading(true)\n    try {\n      const data = await dispatch(nextCollections()).unwrap()\n      await dispatch(pushRecent(Object.keys(data)))\n    } catch (er: any) {\n      return window.notify({ type: 'warning', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!recent.length) onMore()\n  }, [recent, onMore])\n\n  return (\n    <Row gutter={[24, 24]}>\n      {recent.map((symbol, i) => (\n        <Col key={i} xs={12} sm={8} lg={6}>\n          <CollectionCard symbol={symbol} />\n        </Col>\n      ))}\n      <Col span={24}>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col>\n            <MoreButton onMore={onMore} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default RecentList\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Row, Spin } from 'antd'\nimport CollectionCard from '../../components/collectionCard'\n\nimport { AppDispatch, AppState } from 'model'\nimport { loadHot } from 'model/category.controller'\n\nconst HotList = () => {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const hot = useSelector((state: AppState) => state.category.hot)\n\n  const onInit = useCallback(async () => {\n    setLoading(true)\n    try {\n      await dispatch(loadHot())\n    } catch (er: any) {\n      return window.notify({ type: 'warning', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    onInit()\n  }, [onInit])\n\n  return (\n    <Spin spinning={loading}>\n      <Row gutter={[24, 24]}>\n        {hot.map((symbol) => (\n          <Col key={symbol} xs={12} sm={8} lg={6}>\n            <CollectionCard symbol={symbol} />\n          </Col>\n        ))}\n      </Row>\n    </Spin>\n  )\n}\n\nexport default HotList\n","import { useCallback, useEffect, useState } from 'react'\nimport { useAppRoute } from '@sentre/senhub'\n\nimport { Avatar, Col, Empty, Input, Popover, Row, Spin, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { MagicEdenCollection, MIN_SEARCH_LENGTH } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from 'model/collections.controller'\n\nlet timeoutId: NodeJS.Timeout | undefined = undefined\n\nexport type SearchResultProps = {\n  loading: Boolean\n  collections?: MagicEdenCollection[]\n}\nexport const SearchResult = ({ loading, collections }: SearchResultProps) => {\n  const { to } = useAppRoute()\n  const onView = useCallback(\n    (symbol: string) => {\n      if (symbol) return to(`/${symbol}`)\n    },\n    [to],\n  )\n\n  if (loading || !collections)\n    return (\n      <Row gutter={[24, 24]} justify=\"center\">\n        <Col>\n          {loading ? (\n            <Spin style={{ margin: 16 }} />\n          ) : (\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n          )}\n        </Col>\n      </Row>\n    )\n  return (\n    <Row gutter={[24, 24]}>\n      {collections.map((data) => (\n        <Col key={data.symbol} span={24}>\n          <Row\n            gutter={[24, 24]}\n            align=\"middle\"\n            wrap={false}\n            style={{ cursor: 'pointer' }}\n            onClick={() => onView(data.symbol)}\n          >\n            <Col>\n              <Avatar shape=\"square\" size={56} src={data.image} />\n            </Col>\n            <Col flex=\"auto\">\n              <Row gutter={[4, 4]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>{data.name}</Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Typography.Paragraph\n                    style={{ margin: 0 }}\n                    type=\"secondary\"\n                    ellipsis\n                  >\n                    {data.description}\n                  </Typography.Paragraph>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nconst Search = () => {\n  const [loading, setLoading] = useState(false)\n  const [keyword, setKeyword] = useState('')\n  const [data, setData] = useState<MagicEdenCollection[] | undefined>()\n\n  useEffect(() => {\n    setLoading(true)\n    if (timeoutId) clearTimeout(timeoutId)\n    timeoutId = setTimeout(async () => {\n      try {\n        if (!keyword || keyword.length <= MIN_SEARCH_LENGTH)\n          return setData(undefined)\n        const data = await magicEdenSDK.searchCollections(keyword)\n        return setData(data)\n      } catch (er: any) {\n        return setData(undefined)\n      } finally {\n        return setLoading(false)\n      }\n    }, 1000)\n  }, [keyword])\n\n  return (\n    <Popover\n      placement=\"bottom\"\n      overlayStyle={{ width: 300 }}\n      trigger=\"focus\"\n      content={<SearchResult loading={loading} collections={data} />}\n    >\n      <Input\n        size=\"large\"\n        suffix={<IonIcon name=\"search-outline\" />}\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value || '')}\n        placeholder=\"Search by Symbols\"\n      />\n    </Popover>\n  )\n}\n\nexport default Search\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from '@sentre/senhub'\n\n/**\n * Contructor\n */\ntype Conf = {\n  limit: number\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    limit: 12,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    limit: 12,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { AcceptedPayment } from '@sentre/otc-sdk'\nimport { Net } from '@sentre/senhub'\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  whitelist: AcceptedPayment\n}\n\nexport const WHITELIST: AcceptedPayment = {\n  usdc: {\n    address: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    symbol: 'USDC',\n    decimals: 6,\n    url: 'https://www.circle.com/en/usdc',\n  },\n  uxd: {\n    address: '7kbnvuGBxxj8AG9qp8Scn56muWGaRaFqxg1FsRp3PaFT',\n    symbol: 'UXD',\n    decimals: 6,\n    url: 'https://uxd.fi/',\n  },\n  usdt: {\n    address: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n    symbol: 'USDT',\n    decimals: 6,\n    url: 'https://tether.to/',\n  },\n  usdh: {\n    address: 'USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX',\n    symbol: 'USDH',\n    decimals: 6,\n    url: 'https://hubbleprotocol.io/',\n  },\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Devnet configurations\n   */\n  devnet: {\n    whitelist: {},\n  },\n\n  /**\n   * Testnet configurations\n   */\n  testnet: {\n    whitelist: {},\n  },\n\n  /**\n   * Mainnet configurations\n   */\n  mainnet: {\n    whitelist: WHITELIST,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport pagination from './pagination.config'\nimport payment from './payment.config'\n\nconst configs = {\n  manifest: manifest[env],\n  pagination: pagination[env],\n  payment: payment[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { createPDB, util } from '@sentre/senhub'\n\nimport configs from 'configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ViewedNftsState = string[]\n\n/**\n * Store constructor\n */\n\nconst NAME = 'viewed'\nconst initialState: ViewedNftsState = []\n\n/**\n * Actions\n */\n\nexport const getViewedSymbols = createAsyncThunk(\n  `${NAME}/getViewedSymbols`,\n  async ({ walletAddress }: { walletAddress: string }) => {\n    if (!util.isAddress(walletAddress))\n      throw new Error('Invalid wallet address')\n    const pdb = createPDB(walletAddress, appId)\n    const viewed: string[] = (await pdb.getItem('history')) || []\n    return viewed\n  },\n)\n\nexport const addViewedSymbol = createAsyncThunk<\n  ViewedNftsState,\n  {\n    walletAddress: string\n    symbol: string\n  },\n  { state: { viewed: ViewedNftsState } }\n>(\n  `${NAME}/addViewedSymbol`,\n  async ({ walletAddress, symbol }, { getState }) => {\n    if (!util.isAddress(walletAddress))\n      throw new Error('Invalid wallet address')\n    if (!symbol) throw new Error('Invalid symbol')\n    const { viewed: prevViewed } = getState()\n    const nextViewed = [...prevViewed]\n    const index = nextViewed.findIndex((value) => value === symbol)\n    if (index >= 0) nextViewed.splice(index, 1)\n    nextViewed.unshift(symbol)\n    const pdb = createPDB(walletAddress, appId)\n    await pdb.setItem('history', nextViewed)\n    return [...nextViewed]\n  },\n)\n\nexport const deleteViewedSymbol = createAsyncThunk<\n  ViewedNftsState,\n  {\n    walletAddress: string\n    symbol?: string\n    all?: boolean\n  },\n  { state: { viewed: ViewedNftsState } }\n>(\n  `${NAME}/deleteViewedSymbol`,\n  async ({ walletAddress, symbol = '', all = false }, { getState }) => {\n    if (!util.isAddress(walletAddress))\n      throw new Error('Invalid wallet address')\n    const { viewed: prevViewed } = getState()\n    const nextViewed = all ? [] : prevViewed.filter((value) => value !== symbol)\n    const pdb = createPDB(walletAddress, appId)\n    await pdb.setItem('history', nextViewed)\n    return [...nextViewed]\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getViewedSymbols.fulfilled, (state, { payload }) => payload)\n      .addCase(addViewedSymbol.fulfilled, (state, { payload }) => payload)\n      .addCase(deleteViewedSymbol.fulfilled, (state, { payload }) => payload),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWalletAddress, util } from '@sentre/senhub'\n\nimport { Col, Divider, Row, Typography, Empty, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MoreButton from 'components/moreButton'\nimport CollectionCard from 'components/collectionCard'\n\nimport { AppDispatch, AppState } from 'model'\nimport { deleteViewedSymbol, getViewedSymbols } from 'model/viewed.controller'\nimport configs from 'configs'\n\nconst {\n  pagination: { limit: LIMIT },\n} = configs\n\nconst ViewedList = () => {\n  const viewed = useSelector((state: AppState) => state.viewed)\n  const dispatch = useDispatch<AppDispatch>()\n  const [limit, setLimit] = useState(LIMIT)\n  const walletAddress = useWalletAddress()\n  const currentList = useMemo(() => viewed.slice(0, limit), [viewed, limit])\n  const isEmpty = useMemo(() => !viewed || !viewed.length, [viewed])\n  const noMore = useMemo(\n    () => currentList.length === viewed.length,\n    [currentList, viewed],\n  )\n\n  const onDelete = useCallback(\n    async (symbol: string) => {\n      if (!util.isAddress(walletAddress) || !symbol) return\n      return dispatch(deleteViewedSymbol({ walletAddress, symbol }))\n    },\n    [dispatch, walletAddress],\n  )\n  const onClearAll = useCallback(() => {\n    if (!util.isAddress(walletAddress)) return\n    return dispatch(deleteViewedSymbol({ walletAddress, all: true }))\n  }, [dispatch, walletAddress])\n\n  const onMore = useCallback(async () => {\n    return setLimit(Math.min(viewed.length, limit + LIMIT))\n  }, [viewed, limit])\n\n  useEffect(() => {\n    if (util.isAddress(walletAddress))\n      dispatch(getViewedSymbols({ walletAddress }))\n  }, [dispatch, walletAddress])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} wrap={false}>\n          <Col flex=\"auto\">\n            <Divider orientation=\"left\" style={{ margin: 0 }}>\n              <Typography.Title level={4} type=\"secondary\">\n                🔍 Viewed Collections\n              </Typography.Title>\n            </Divider>\n          </Col>\n          <Col>\n            <Button\n              onClick={onClearAll}\n              size=\"small\"\n              icon={<IonIcon name=\"trash-outline\" />}\n            >\n              Clear All\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      {isEmpty ? (\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <Empty description=\"No history found\" />\n            </Col>\n          </Row>\n        </Col>\n      ) : (\n        currentList.map((symbol, i) => (\n          <Col key={i} xs={12} sm={8} lg={6}>\n            <CollectionCard symbol={symbol} onClose={onDelete} closable />\n          </Col>\n        ))\n      )}\n      <Col span={24}>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col>\n            <MoreButton onMore={onMore} disabled={noMore} />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ViewedList\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { MagicEdenMyNFT } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from './collections.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type MyNFTsState = Record<string, MagicEdenMyNFT>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mine'\nconst initialState: MyNFTsState = {}\n\n/**\n * Actions\n */\n\nexport const getMyNFTs = createAsyncThunk<\n  Partial<MyNFTsState>,\n  string,\n  { state: any }\n>(`${NAME}/getMyNFTs`, async (walletAddress, { getState }) => {\n  const { mine: prevMine } = getState()\n  const data = await magicEdenSDK.getMyNFTs(walletAddress)\n  const mine: MyNFTsState = {}\n  for (const nft of data) mine[nft.mintAddress] = nft\n  return { ...(prevMine || {}), ...mine }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getMyNFTs.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","var _path, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSolLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 21,\n    height: 19,\n    viewBox: \"0 0 21 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.16618 14.2006C4.23073 14.1296 4.30933 14.073 4.39702 14.0341C4.48462 13.9953 4.57951 13.9752 4.67535 13.9752L20.3857 13.988C20.4527 13.9882 20.5181 14.0077 20.5741 14.0443C20.6301 14.0809 20.6743 14.133 20.7012 14.1942C20.7282 14.2555 20.7368 14.3233 20.726 14.3893C20.7152 14.4553 20.6854 14.5167 20.6403 14.5662L17.2948 18.2499C17.2302 18.3209 17.1515 18.3776 17.0638 18.4164C16.9761 18.4553 16.8812 18.4753 16.7852 18.4753L1.07521 18.4625C1.00831 18.4623 0.94288 18.4428 0.886881 18.4062C0.830881 18.3696 0.786719 18.3174 0.759761 18.2562C0.732803 18.195 0.724196 18.1272 0.735005 18.0612C0.745806 17.9952 0.775558 17.9338 0.820629 17.8843L4.16618 14.2006ZM20.6403 11.134C20.6854 11.1835 20.7152 11.245 20.726 11.311C20.7368 11.377 20.7282 11.4448 20.7012 11.506C20.6743 11.5672 20.6301 11.6193 20.5741 11.6559C20.5181 11.6925 20.4527 11.712 20.3857 11.7122L4.67577 11.7251C4.57986 11.7251 4.48497 11.705 4.39719 11.6662C4.30942 11.6273 4.23073 11.5706 4.16618 11.4996L0.820629 7.81377C0.775558 7.76431 0.745806 7.70285 0.735005 7.63685C0.724196 7.57084 0.732803 7.50304 0.759761 7.44184C0.786719 7.38064 0.830881 7.32852 0.886881 7.29192C0.94288 7.25532 1.00831 7.23577 1.07521 7.2356L16.7856 7.22274C16.8815 7.22283 16.9763 7.24289 17.064 7.28172C17.1517 7.32055 17.2303 7.37721 17.2948 7.44818L20.6403 11.134ZM4.16618 0.700047C4.23073 0.629098 4.30933 0.572396 4.39702 0.533574C4.48462 0.494761 4.57951 0.474669 4.67535 0.474609L20.3857 0.487467C20.4527 0.487604 20.5181 0.507165 20.5741 0.543775C20.6301 0.580385 20.6743 0.632467 20.7012 0.693695C20.7282 0.754932 20.7368 0.822675 20.726 0.888695C20.7152 0.954715 20.6854 1.01617 20.6403 1.06563L17.2948 4.74936C17.2302 4.82033 17.1515 4.87708 17.0638 4.91591C16.9761 4.95474 16.8812 4.97479 16.7852 4.97479L1.07521 4.96194C1.00831 4.96177 0.94288 4.94222 0.886881 4.90562C0.830881 4.86902 0.786719 4.8169 0.759761 4.7557C0.732803 4.6945 0.724196 4.6267 0.735005 4.56069C0.745806 4.49469 0.775558 4.43323 0.820629 4.38377L4.16618 0.700047Z\",\n    fill: \"url(#paint0_linear_1238_19291)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_1238_19291\",\n    x1: 1.33751,\n    y1: 18.8679,\n    x2: 20.1234,\n    y2: 0.0820059,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#9945FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.2,\n    stopColor: \"#7962E7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#00D18C\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSolLogo);\nexport default __webpack_public_path__ + \"static/media/sol-logo.ebe4f9050babf4d7710f96abae751657.svg\";\nexport { ForwardRef as ReactComponent };","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Infix, useAppRoute, useInfix } from '@sentre/senhub'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  InputNumber,\n  Row,\n  Skeleton,\n  Space,\n  Typography,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { AppState } from 'model'\nimport { useCollection } from 'hooks/useCollection'\nimport SolLogo from 'static/images/sol-logo.svg'\nimport './index.less'\n\nexport type MyNFTCardProps = {\n  mintAddress: string\n  onSell?: (mintAddress: string, price: string) => void\n  onCancel?: (mintAddress: string, price: string) => void\n  loading?: boolean\n}\n\nconst MyNFTCard = ({\n  mintAddress,\n  onSell = () => {},\n  onCancel = () => {},\n  loading = false,\n}: MyNFTCardProps) => {\n  const [price, setPrice] = useState('')\n  const {\n    image,\n    name,\n    collection: symbol,\n    listStatus,\n    price: listedPrice,\n  } = useSelector((state: AppState) => state.mine[mintAddress])\n  const {\n    collection: { image: collectionImage },\n  } = useCollection(symbol)\n  const { to } = useAppRoute()\n  const infix = useInfix()\n  const selling = useMemo(() => listStatus === 'listed', [listStatus])\n\n  return (\n    <Card\n      cover={\n        <div>\n          <img width=\"100%\" height=\"100%\" alt={name} src={image} />\n          {selling && (\n            <Button\n              shape=\"circle\"\n              className=\"selling-button\"\n              icon={<IonIcon name=\"cash-outline\" />}\n            />\n          )}\n        </div>\n      }\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          {name ? (\n            <Space\n              onClick={() => to(`/${symbol}`)}\n              style={{ cursor: 'pointer' }}\n            >\n              <Avatar src={collectionImage} />\n              <Typography.Title level={5} ellipsis>\n                {name}\n              </Typography.Title>\n            </Space>\n          ) : (\n            <Skeleton\n              paragraph={{ rows: 1 }}\n              title={false}\n              avatar\n              round\n              active\n              loading\n            />\n          )}\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} wrap={infix < Infix.md}>\n            <Col {...(infix < Infix.md ? { xs: 24 } : { flex: 'auto' })}>\n              <InputNumber\n                addonAfter={\n                  <Avatar\n                    shape=\"square\"\n                    src={SolLogo}\n                    size={18}\n                    style={{ padding: 3 }}\n                  />\n                }\n                placeholder=\"Price in SOL\"\n                value={selling ? String(listedPrice) : price}\n                onChange={(value) => setPrice(value)}\n                readOnly={selling}\n                controls={false}\n              />\n            </Col>\n            <Col {...(infix < Infix.md ? { xs: 24 } : {})}>\n              <Button\n                type={!selling ? 'primary' : 'default'}\n                onClick={() =>\n                  !selling\n                    ? onSell(mintAddress, price)\n                    : onCancel(mintAddress, String(listedPrice))\n                }\n                loading={loading}\n                block\n              >\n                {!selling ? 'Sell' : 'Cancel'}\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default MyNFTCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWalletAddress, util } from '@sentre/senhub'\n\nimport { Col, Row } from 'antd'\nimport ViewedList from './viewedList'\n\nimport { AppDispatch, AppState } from 'model'\nimport { getMyNFTs } from 'model/mine.controller'\nimport MyNFTCard from 'components/myNFTCard'\nimport { magicEdenSDK } from 'model/collections.controller'\n\nconst MyNFTs = () => {\n  const [handlingAddress, setHandlingAddress] = useState('')\n  const dispatch = useDispatch<AppDispatch>()\n  const walletAddress = useWalletAddress()\n  const mine = useSelector((state: AppState) => state.mine)\n\n  const onSell = useCallback(\n    async (mintAddress: string, price: string) => {\n      try {\n        setHandlingAddress(mintAddress)\n        const { wallet } = window.sentre\n        const sellTransaction = await magicEdenSDK.sell({\n          sellerAddress: walletAddress,\n          mintAddress,\n          price: Number(price),\n        })\n        const signedTx = await wallet.signTransaction(sellTransaction)\n        const [txId] = await magicEdenSDK.sendAndConfirm([signedTx])\n        return window.notify({\n          type: 'success',\n          description: `Successfully list the NFT. Click to view details.`,\n          onClick: () => window.open(util.explorer(txId), '_blank'),\n        })\n      } catch (er: any) {\n        return window.notify({\n          type: 'error',\n          description: er.response?.data?.message || er.message,\n        })\n      } finally {\n        return setHandlingAddress('')\n      }\n    },\n    [walletAddress],\n  )\n\n  const onCancel = useCallback(\n    async (mintAddress: string, price: string) => {\n      try {\n        setHandlingAddress(mintAddress)\n        const { wallet } = window.sentre\n        const sellTransaction = await magicEdenSDK.cancel({\n          sellerAddress: walletAddress,\n          mintAddress,\n          price: Number(price),\n        })\n        const signedTx = await wallet.signTransaction(sellTransaction)\n        const [txId] = await magicEdenSDK.sendAndConfirm([signedTx])\n        return window.notify({\n          type: 'success',\n          description: `Successfully cancel the NFT. Click to view details.`,\n          onClick: () => window.open(util.explorer(txId), '_blank'),\n        })\n      } catch (er: any) {\n        return window.notify({\n          type: 'error',\n          description: er.response?.data?.message || er.message,\n        })\n      } finally {\n        return setHandlingAddress('')\n      }\n    },\n    [walletAddress],\n  )\n\n  useEffect(() => {\n    if (util.isAddress(walletAddress)) dispatch(getMyNFTs(walletAddress))\n  }, [walletAddress, dispatch])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          {Object.keys(mine).map((mintAddress) => (\n            <Col key={mintAddress} xs={12} sm={8} lg={6}>\n              <MyNFTCard\n                mintAddress={mintAddress}\n                onSell={onSell}\n                onCancel={onCancel}\n                loading={mintAddress === handlingAddress}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Col span={24} />\n      </Col>\n      <Col span={24} />\n      <Col span={24}>\n        <ViewedList />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MyNFTs\n","import { useCallback, useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useAppRoute } from '@sentre/senhub'\n\nimport { Col, Row, Segmented } from 'antd'\nimport RecentList from './recentList'\nimport HotList from './hotList'\nimport Search from './search'\n\nimport { Category } from 'model/category.controller'\nimport MyNFTs from './myNFTs'\n\nexport type ExtendedCategory = Category | 'my-nfts'\nconst TABS: ExtendedCategory[] = ['recent', 'hot', 'my-nfts']\n\nconst CurrentList = ({ type = 'recent' }: { type?: ExtendedCategory }) => {\n  if (type === 'recent') return <RecentList />\n  if (type === 'hot') return <HotList />\n  if (type === 'my-nfts') return <MyNFTs />\n  return <RecentList />\n}\n\nconst Collections = () => {\n  const { to } = useAppRoute()\n  const { search } = useLocation()\n  const tab = useMemo(() => {\n    const params = new URLSearchParams(search)\n    const value = params.get('tab') as ExtendedCategory\n    if (!TABS.includes(value)) return 'recent'\n    return value\n  }, [search])\n\n  const setTab = useCallback((value: Category) => to(`?tab=${value}`), [to])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col flex=\"auto\">\n            <Segmented\n              size=\"large\"\n              options={[\n                { label: '💎 Newest', value: 'recent' },\n                { label: '🔥 Hot (24h)', value: 'hot' },\n                { label: '👀 My NFTs', value: 'my-nfts' },\n              ]}\n              value={tab}\n              onChange={(e) => setTab(e as Category)}\n            />\n          </Col>\n          <Col>\n            <Search />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <CurrentList type={tab} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Collections\n","import { useMemo } from 'react'\nimport { Infix, useInfix } from '@sentre/senhub'\n\nimport { Avatar, Card, Space, Tooltip, Typography } from 'antd'\n\nimport { MagicEdenRarity } from 'sdk/magicEdenSDK'\n\nexport const RANKS: Record<keyof MagicEdenRarity, string> = {\n  moonrank: 'https://moonrank.app/static/favicon.ico',\n  howrare: 'https://howrare.com/img/logo.png',\n}\n\nexport type RarityProps = {\n  name: keyof MagicEdenRarity\n  rank: number\n}\n\nconst Rarity = ({ name, rank }: RarityProps) => {\n  const infix = useInfix()\n  const isMobile = useMemo(() => infix < Infix.md, [infix])\n\n  return (\n    <Tooltip title={name}>\n      <Card\n        bodyStyle={{ padding: isMobile ? 4 : 8, cursor: 'pointer' }}\n        style={{ minWidth: 60, maxWidth: 96 }}\n      >\n        <Space>\n          <Avatar shape=\"circle\" size={isMobile ? 16 : 24} src={RANKS[name]} />\n          <Space>\n            <Typography.Text>{rank}</Typography.Text>\n          </Space>\n        </Space>\n      </Card>\n    </Tooltip>\n  )\n}\nexport default Rarity\n","import { Avatar, Col, Row, Space, Typography } from 'antd'\nimport MagicEdenLogo from 'static/images/magic-eden-logo.jpeg'\n\nconst MagicEdenTitle = () => {\n  return (\n    <Row gutter={[16, 16]} align=\"middle\">\n      <Col>\n        <Avatar src={MagicEdenLogo} />\n      </Col>\n      <Col flex=\"auto\">\n        <Space size={0} direction=\"vertical\">\n          <Typography.Text>You are watching NFTs on</Typography.Text>\n          <Typography.Text type=\"secondary\" className=\"caption\">\n            magiceden.io\n          </Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MagicEdenTitle\n","import { Avatar } from 'antd'\n\nimport IMAGE_DEFAULT from 'static/images/nft-default.svg'\n\nexport type ImageNFTProps = {\n  src?: string\n  size?: number\n}\n\nconst ImageNFT = ({ src = IMAGE_DEFAULT, size }: ImageNFTProps) => {\n  return <Avatar shape=\"square\" src={src} size={size} />\n}\n\nexport default ImageNFT\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { MagicEdenNFTMetadata } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from './collections.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type MetadataState = Record<string, MagicEdenNFTMetadata>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'metadata'\nconst initialState: MetadataState = {}\n\n/**\n * Actions\n */\n\nexport const getNFTMetadata = createAsyncThunk<\n  Partial<MetadataState>,\n  { mintAddress: string; force?: boolean },\n  { state: any }\n>(\n  `${NAME}/getNFTMetadata`,\n  async ({ mintAddress, force = false }, { getState }) => {\n    const {\n      metadata: { [mintAddress]: currentData },\n    } = getState()\n    if (currentData && !force) return { [mintAddress]: currentData }\n    const data = await magicEdenSDK.getNFTMetadata(mintAddress)\n    return { [mintAddress]: data }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getNFTMetadata.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { AppDispatch, AppState } from 'model'\nimport { getNFTMetadata } from 'model/metadata.controller'\n\nexport const useMetadata = (mintAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const metadata = useSelector((state: AppState) => state.metadata[mintAddress])\n\n  useEffect(() => {\n    if (!metadata) dispatch(getNFTMetadata({ mintAddress }))\n  }, [dispatch, metadata, mintAddress])\n\n  return metadata || {}\n}\n","import { useSelector } from 'react-redux'\n\nimport { Avatar, Col, Row, Space, Spin, Typography } from 'antd'\nimport ImageNFT from './imageNFT'\n\nimport { AppState } from 'model'\nimport CollectionSocial from 'components/collectionCard/social'\nimport { useCollection } from 'hooks/useCollection'\nimport { useMetadata } from 'hooks/useMetadata'\nimport SolLogo from 'static/images/sol-logo.svg'\n\nexport type CardNFTProps = { symbol: string; mintAddress: string }\n\nconst CardNFT = ({ symbol, mintAddress }: CardNFTProps) => {\n  const {\n    price,\n    extra: { img },\n  } = useSelector((state: AppState) => state.listing[symbol][mintAddress])\n  const {\n    loading,\n    collection: { name: collectionName },\n  } = useCollection(symbol)\n  const { name, image } = useMetadata(mintAddress)\n\n  return (\n    <Spin spinning={loading}>\n      <Row gutter={[16, 16]} wrap={false}>\n        <Col>\n          <ImageNFT src={img || image} size={87} />\n        </Col>\n        <Col flex=\"auto\">\n          <Row gutter={[4, 4]}>\n            <Col span={24}>\n              <Row gutter={[4, 4]} align=\"middle\" wrap={false}>\n                <Col flex=\"auto\">\n                  <Typography.Text className=\"caption\" type=\"secondary\">\n                    {collectionName}\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <CollectionSocial symbol={symbol} />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Title level={5}>{name}</Typography.Title>\n                <Space size={4}>\n                  <Avatar\n                    shape=\"square\"\n                    src={SolLogo}\n                    size={24}\n                    style={{ padding: 3 }}\n                  />\n                  <Typography.Title level={3}>{price}</Typography.Title>\n                </Space>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\n\nexport default CardNFT\n","import { Button, Col, Row, Typography } from 'antd'\n\nimport configs from 'configs'\n\nconst {\n  payment: { whitelist },\n} = configs\n\nexport type TokenToBuyProps = {\n  value?: string\n  onChange?: (value: string) => void\n}\n\nconst TokenToBuy = ({\n  value = 'sol',\n  onChange = () => {},\n}: TokenToBuyProps) => {\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Text>Payment by</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          {['sol', ...Object.keys(whitelist)].map((symbol) => (\n            <Col key={symbol}>\n              <Button\n                onClick={() => onChange(symbol)}\n                className={symbol === value ? 'token-selected' : undefined}\n              >\n                {symbol.toUpperCase()}\n              </Button>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenToBuy\n","import { DEFAULT_EMPTY_ADDRESS, utils } from '@senswap/sen-js'\nimport {\n  util,\n  useAccounts,\n  useWalletAddress,\n  useWalletBalance,\n  useMintDecimals,\n} from '@sentre/senhub'\n\nexport type AccountBalanceReturn = {\n  amount: bigint\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (\n  mintAddress?: string,\n  amount?: bigint,\n  decimals?: number,\n) => {\n  if (\n    !util.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: BigInt(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utils.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const walletAddress = useWalletAddress()\n  const lamports = useWalletBalance()\n  const accounts = useAccounts()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals({ mintAddress }) || 0\n\n  if (!util.isAddress(walletAddress) || !util.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, lamports, 9)\n\n  return buildResult(mintAddress, amount, decimals)\n}\n\nexport default useAccountBalance\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport useAccountBalance from 'hooks/useAccountBalance'\n\nconst usePriceExchange = (price: number, tokenSymbol: string) => {\n  const walletAddress = useWalletAddress()\n  const [estPrice, setEstPrice] = useState<number>(0)\n  const [tokenAccount, setTokenAccount] = useState('')\n  const { balance } = useAccountBalance(tokenAccount)\n  const validBuy = useMemo(\n    () => (balance < estPrice ? false : true),\n    [balance, estPrice],\n  )\n\n  const estimateExchangePrice = async ({\n    tokenSymbol,\n    nftPrice,\n  }: {\n    tokenSymbol: string\n    nftPrice: number\n  }) => {\n    const solPrice = nftPrice\n    const { data } = await (\n      await fetch(`https://price.jup.ag/v1/price?id=SOL&vsToken=${tokenSymbol}`)\n    ).json()\n\n    const estimatePrice = solPrice * data.price\n    return { estimatePrice, solPrice, tokenInfo: data }\n  }\n\n  const estimatePrice = useCallback(async () => {\n    if (tokenSymbol === 'sol') {\n      setTokenAccount(walletAddress)\n      return setEstPrice(price)\n    }\n\n    const { splt } = window.sentre\n    const { estimatePrice, tokenInfo } = await estimateExchangePrice({\n      tokenSymbol: tokenSymbol,\n      nftPrice: price,\n    })\n    const tokenAddres = await splt.deriveAssociatedAddress(\n      walletAddress,\n      tokenInfo?.vsToken,\n    )\n    setTokenAccount(tokenAddres)\n    return setEstPrice(estimatePrice)\n  }, [price, tokenSymbol, walletAddress])\n\n  useEffect(() => {\n    estimatePrice()\n  }, [estimatePrice])\n\n  return { estPrice, validBuy }\n}\n\nexport default usePriceExchange\n","import { Fragment, useCallback, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Infix, useInfix, useWalletAddress, util } from '@sentre/senhub'\nimport { OTC } from '@sentre/otc-sdk'\n\nimport { Alert, Button, Col, Modal, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MagicEdenTitle from './magicEdenTitle'\nimport CardNFT from './cardNFT'\nimport TokenToBuy from './tokenToBuy'\n\nimport { AppState } from 'model'\nimport { magicEdenSDK } from 'model/collections.controller'\nimport usePriceExchange from 'hooks/usePriceExchange'\n\nconst otcSDK = new OTC()\nconst NETWORK_FEE = 0.00001\nconst CREATE_ACCOUNT_FEE = 0.00203928 + 0.00201144\n\nexport type NFTPluginProps = { symbol: string; mintAddress: string }\n\nconst NFTPlugin = ({ symbol, mintAddress }: NFTPluginProps) => {\n  const [loading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [tokenSymbol, setTokenSymbol] = useState('sol')\n  const { seller, sellerReferral, price, tokenMint, auctionHouse } =\n    useSelector((state: AppState) => state.listing[symbol][mintAddress])\n  const walletAddress = useWalletAddress()\n  const infix = useInfix()\n\n  const isMobile = useMemo(() => infix < Infix.md, [infix])\n  const tokenName = useMemo(() => tokenSymbol.toUpperCase(), [tokenSymbol])\n  const priceNFT = price + NETWORK_FEE + CREATE_ACCOUNT_FEE\n  const { estPrice, validBuy } = usePriceExchange(priceNFT, tokenSymbol)\n\n  const onBuy = useCallback(async () => {\n    try {\n      setLoading(true)\n      const { wallet } = window.sentre\n      let txs = []\n      if (tokenSymbol !== 'sol') {\n        const setupTransaction = await otcSDK.exchange({\n          walletAddress,\n          tokenSymbol,\n          solAmount: priceNFT,\n        })\n        txs.push(setupTransaction)\n      }\n      const buyNowTransaction = await magicEdenSDK.buyNow({\n        buyerAddress: walletAddress,\n        sellerAddress: seller,\n        auctionHouseAddress: auctionHouse,\n        sellerReferralAddress: sellerReferral,\n        mintAddress: tokenMint,\n        price,\n      })\n      txs.push(buyNowTransaction)\n      const signedTxs = await wallet.signAllTransactions(txs)\n      const txIds = await magicEdenSDK.sendAndConfirm(signedTxs)\n      setVisible(false)\n      return window.notify({\n        type: 'success',\n        description: `Successfully buy the NFT. Click to view details.`,\n        onClick: () =>\n          window.open(util.explorer(txIds[txIds.length - 1]), '_blank'),\n      })\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.response?.data?.message || er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [\n    priceNFT,\n    tokenSymbol,\n    walletAddress,\n    seller,\n    sellerReferral,\n    auctionHouse,\n    tokenMint,\n    price,\n  ])\n\n  return (\n    <Fragment>\n      <Button\n        onClick={() => setVisible(true)}\n        type=\"primary\"\n        icon={isMobile ? undefined : <IonIcon name=\"card-outline\" />}\n      >\n        Buy\n      </Button>\n      <Modal\n        className=\"modal-nft-plugin\"\n        visible={visible}\n        footer={false}\n        onCancel={() => setVisible(false)}\n        width={368}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        bodyStyle={{ padding: 16 }}\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <MagicEdenTitle />\n          </Col>\n          <Col span={24}>\n            <CardNFT symbol={symbol} mintAddress={mintAddress} />\n          </Col>\n          {/* <Col span={24}>\n            <InfoNFT />\n          </Col> */}\n          <Col span={24}>\n            <TokenToBuy value={tokenSymbol} onChange={setTokenSymbol} />\n          </Col>\n          <Col span={24}>\n            <Alert\n              message={`Estimated payment is ${util\n                .numeric(estPrice)\n                .format('0,0.[0000]')} ${tokenName}.`}\n              type=\"info\"\n              showIcon\n            />\n          </Col>\n          {!validBuy && (\n            <Col span={24}>\n              <Alert\n                message={`Not enough ${tokenName} in your balance. Please add more ${tokenName}, or select another token!`}\n                type=\"warning\"\n                showIcon\n              />\n            </Col>\n          )}\n          <Col span={24}>\n            <Button\n              type=\"primary\"\n              onClick={onBuy}\n              loading={loading}\n              block\n              disabled={!validBuy}\n            >\n              Buy Now\n            </Button>\n          </Col>\n          {/* <Col span={24}>\n            <Button type=\"text\" block>\n              Search NFT\n            </Button>\n          </Col> */}\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default NFTPlugin\n","import { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport { Avatar, Card, Col, Row, Skeleton, Space, Typography } from 'antd'\nimport Rarity from 'components/rarity'\nimport NFTPlugin from 'view/nftPlugin'\n\nimport { AppState } from 'model'\nimport { useMetadata } from 'hooks/useMetadata'\nimport SolLogo from 'static/images/sol-logo.svg'\n\nexport type ListingNFTCardProps = {\n  symbol: string\n  mintAddress: string\n}\n\nconst ListingNFTCard = ({ symbol, mintAddress }: ListingNFTCardProps) => {\n  const {\n    price,\n    rarity,\n    extra: { img },\n  } = useSelector((state: AppState) => state.listing[symbol][mintAddress])\n  const { name, image } = useMetadata(mintAddress)\n\n  return (\n    <Card\n      cover={<img alt={name} src={img || image} />}\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          {name ? (\n            <Typography.Title level={5} ellipsis>\n              {name}\n            </Typography.Title>\n          ) : (\n            <Skeleton\n              paragraph={{ rows: 1 }}\n              title={false}\n              round\n              active\n              loading\n            />\n          )}\n        </Col>\n        <Col span={24}>\n          <Space>\n            {rarity?.moonrank && (\n              <Rarity name=\"moonrank\" rank={rarity?.moonrank.rank} />\n            )}\n            {rarity?.howrare && (\n              <Rarity name=\"howrare\" rank={rarity?.howrare.rank} />\n            )}\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]} align=\"middle\" wrap={false}>\n            <Col flex=\"auto\">\n              <Space size={4}>\n                <Avatar\n                  shape=\"square\"\n                  src={SolLogo}\n                  size={24}\n                  style={{ padding: 3 }}\n                />\n                <Typography.Title level={5}>\n                  {util.numeric(price).format('0,0.[0000]')}\n                </Typography.Title>\n              </Space>\n            </Col>\n            <Col>\n              <NFTPlugin symbol={symbol} mintAddress={mintAddress} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ListingNFTCard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { MagicEdenListingNFT } from 'sdk/magicEdenSDK'\nimport { magicEdenSDK } from './collections.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type ListingNFTs = Record<string, MagicEdenListingNFT>\nexport type ListingNFTsState = Record<string, ListingNFTs>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'listing'\nconst initialState: ListingNFTsState = {}\n\n/**\n * Actions\n */\n\nexport const nextListingNFTs = createAsyncThunk<\n  Partial<ListingNFTsState>,\n  { symbol: string; limit?: number },\n  { state: any }\n>(`${NAME}/nextListingNFTs`, async ({ symbol, limit = 12 }, { getState }) => {\n  const {\n    listing: { [symbol]: prevNFTs },\n  } = getState()\n  const data = await magicEdenSDK.nextListingNFTs(symbol, limit)\n  const nfts: ListingNFTs = {}\n  for (const nft of data) nfts[nft.tokenMint] = nft\n  return { [symbol]: { ...(prevNFTs || {}), ...nfts } }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      nextListingNFTs.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { useAppRoute, useWalletAddress, util } from '@sentre/senhub'\n\nimport { Button, Empty, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MoreButton from 'components/moreButton'\nimport ListingNFTCard from 'components/listingNFTCard'\n\nimport { AppDispatch, AppState } from 'model'\nimport { addViewedSymbol } from 'model/viewed.controller'\nimport { nextListingNFTs } from 'model/listing.controller'\n\nconst Collection = () => {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n  const { symbol } = useParams<{ symbol: string }>()\n  const listingNFTs = useSelector((state: AppState) => state.listing[symbol])\n  const walletAddress = useWalletAddress()\n  const { back } = useAppRoute()\n\n  const isEmpty = useMemo(\n    () => !listingNFTs || !Object.keys(listingNFTs).length,\n    [listingNFTs],\n  )\n\n  const onMore = useCallback(async () => {\n    try {\n      setLoading(true)\n      await dispatch(nextListingNFTs({ symbol }))\n    } catch (er: any) {\n      return window.notify({ type: 'warning', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [dispatch, symbol])\n\n  useEffect(() => {\n    ;(async () => {\n      if (!util.isAddress(walletAddress) || !symbol) return\n      await dispatch(addViewedSymbol({ symbol, walletAddress }))\n    })()\n  }, [dispatch, symbol, walletAddress])\n\n  useEffect(() => {\n    if (!listingNFTs) onMore()\n  }, [onMore, listingNFTs])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Button\n          size=\"large\"\n          icon={<IonIcon name=\"arrow-back-outline\" />}\n          onClick={() => back('/')}\n        >\n          Back\n        </Button>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          {isEmpty ? (\n            <Col span={24}>\n              <Row gutter={[24, 24]} justify=\"center\">\n                <Col>\n                  <Empty description=\"No listing NFT\" />\n                </Col>\n              </Row>\n            </Col>\n          ) : (\n            Object.values(listingNFTs || {}).map(({ tokenMint }, i) => (\n              <Col key={i} xs={12} sm={8} lg={6}>\n                <ListingNFTCard symbol={symbol} mintAddress={tokenMint} />\n              </Col>\n            ))\n          )}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col>\n            <MoreButton onMore={onMore} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Collection\n","import { Row, Col, Typography, Space } from 'antd'\n\nconst MainnetOnly = () => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24} style={{ textAlign: 'center' }}>\n        <Space direction=\"vertical\">\n          <Typography.Title level={2}>\n            ⚠️ Only supported on Solana mainnet.\n          </Typography.Title>\n          <Typography.Text>\n            You can open the Control Center, switch to mainnet, and experience\n            the application.\n          </Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MainnetOnly\n","import { Row, Col, Typography } from 'antd'\nimport TextLoop from 'react-text-loop'\n\nimport configs from 'configs'\n\nconst {\n  payment: { whitelist },\n} = configs\n\nconst HeroBanner = () => {\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col>\n        <Typography.Text style={{ fontSize: 64, fontWeight: 900 }}>\n          Buy NFTs by{' '}\n          <TextLoop>\n            {Object.values(whitelist).map(({ address, url, symbol }) => (\n              <a\n                key={address}\n                href={url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"gradient-text\"\n              >\n                {symbol}\n              </a>\n            ))}\n          </TextLoop>\n          .\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default HeroBanner\n","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppRoute, util } from '@sentre/senhub'\n\nimport { Avatar, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { AppState } from 'model'\nimport SolLogo from 'static/images/sol-logo.svg'\n\nconst AVATAR_SIZE = 64\n\nexport const getMedal = (rank = 0) => {\n  if (rank === 1) return '#FEE101'\n  if (rank === 2) return '#D7D7D7'\n  if (rank === 3) return '#A77044'\n  return '#0074FD'\n}\n\nexport type PopularCollectionCardProps = { symbol: string }\n\nconst PopularCollectionCard = ({ symbol }: PopularCollectionCardProps) => {\n  const { image, name, rank, totalVol } =\n    useSelector((state: AppState) => state.popularCollections[symbol]) || {}\n  const { to } = useAppRoute()\n\n  const onDetails = useCallback(() => to(`/${symbol}`), [to, symbol])\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} onClick={onDetails} hoverable>\n      <Row gutter={[16, 16]} wrap={false} align=\"middle\">\n        <Col>\n          <Avatar src={image} size={AVATAR_SIZE} shape=\"square\" />\n        </Col>\n        <Col flex=\"auto\">\n          <Row gutter={[8, 8]}>\n            <Col span={24}>\n              <Row gutter={[8, 8]} wrap={false} align=\"middle\">\n                <Col>\n                  <Space>\n                    <Typography.Title level={4}>#{rank}</Typography.Title>\n                    <IonIcon\n                      name=\"ribbon\"\n                      style={{ fontSize: 18, color: getMedal(rank) }}\n                    />\n                  </Space>\n                </Col>\n                <Col flex=\"auto\">\n                  <Typography.Title level={5} ellipsis>\n                    {name}\n                  </Typography.Title>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Space>\n                <Typography.Text type=\"secondary\">Volume:</Typography.Text>\n                <Typography.Text>\n                  {util.numeric(totalVol).format('0,0.[00]')}\n                </Typography.Text>\n                <Avatar\n                  shape=\"square\"\n                  src={SolLogo}\n                  size={18}\n                  style={{ padding: 3 }}\n                />\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default PopularCollectionCard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { MagicEdenPopularCollection } from 'sdk/types'\nimport { magicEdenSDK } from './collections.controller'\n\n/**\n * Interface & Utility\n */\n\nexport type PopularCollectionsState = Record<string, MagicEdenPopularCollection>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'popularCollection'\nconst initialState: PopularCollectionsState = {}\n\n/**\n * Actions\n */\n\nexport type PopularCollectionsParams = { window: string; limit: number }\nexport const PopularCollectionsDefault: PopularCollectionsParams = {\n  window: '30d',\n  limit: 6,\n}\nexport const getPopularCollections = createAsyncThunk(\n  `${NAME}/getPopularCollections`,\n  async (\n    popularCollectionsParams: PopularCollectionsParams = PopularCollectionsDefault,\n  ) => {\n    const { window, limit } = {\n      ...PopularCollectionsDefault,\n      ...popularCollectionsParams,\n    }\n    const data = await magicEdenSDK.getPopularCollections(window, limit)\n    const collections: PopularCollectionsState = {}\n    for (const collection of data)\n      collections[collection.collectionSymbol] = collection\n    return collections\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getPopularCollections.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Infix, useInfix } from '@sentre/senhub'\n\nimport { Col, Row, Typography } from 'antd'\nimport PopularCollectionCard from './popularCollectionCard'\n\nimport { AppDispatch, AppState } from 'model'\nimport { getPopularCollections } from 'model/popularCollections.controller'\n\nconst PopularCollections = () => {\n  const popularCollections = useSelector(\n    (state: AppState) => state.popularCollections,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n  const infix = useInfix()\n  const limit = useMemo(() => (infix < Infix.sm ? 3 : 6), [infix])\n\n  useEffect(() => {\n    dispatch(getPopularCollections())\n  }, [dispatch])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col>\n            <Typography.Title level={3}>\n              👑 Collections of the Month\n            </Typography.Title>\n          </Col>\n        </Row>\n      </Col>\n      {Object.keys(popularCollections)\n        .slice(0, limit)\n        .map((symbol) => (\n          <Col key={symbol} xs={24} sm={12} lg={8}>\n            <PopularCollectionCard symbol={symbol} />\n          </Col>\n        ))}\n    </Row>\n  )\n}\n\nexport default PopularCollections\n","import { Route, Switch } from 'react-router-dom'\nimport { net, useAppRoute } from '@sentre/senhub'\n\nimport { Row, Col } from 'antd'\nimport Collections from './collections'\nimport Collection from './collection'\nimport MainnetOnly from 'components/mainnetOnly'\nimport HeroBanner from 'components/heroBanner'\nimport PopularCollections from './popularCollections'\n\nimport 'static/styles/light.less'\nimport 'static/styles/dark.less'\n\nconst View = () => {\n  const { extend } = useAppRoute()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24} style={{ maxWidth: 1200 }}>\n        <Row gutter={[24, 24]}>\n          <Col span={24} style={{ marginTop: 64, marginBottom: 64 }}>\n            <HeroBanner />\n          </Col>\n          <Col span={24} style={{ marginBottom: 32 }}>\n            <PopularCollections />\n          </Col>\n          {net === 'mainnet' ? (\n            <Col span={24}>\n              <Switch>\n                <Route exact path={extend('/')} component={Collections} />\n                <Route exact path={extend('/:symbol')} component={Collection} />\n              </Switch>\n            </Col>\n          ) : (\n            <Col span={24}>\n              <MainnetOnly />\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Col span={24} />\n    </Row>\n  )\n}\n\nexport default View\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'model/devTools'\n\nimport collections from 'model/collections.controller'\nimport stat from 'model/stat.controller'\nimport popularCollections from 'model/popularCollections.controller'\nimport category from 'model/category.controller'\nimport mine from 'model/mine.controller'\nimport viewed from 'model/viewed.controller'\nimport listing from 'model/listing.controller'\nimport metadata from 'model/metadata.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    collections,\n    stat,\n    popularCollections,\n    category,\n    mine,\n    viewed,\n    listing,\n    metadata,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { AntdProvider } from '@sentre/senhub'\n\nimport View from 'view'\n\nimport model from 'model'\nimport configs from 'configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <AntdProvider appId={appId} prefixCls={appId}>\n      <Provider store={model}>\n        <View />\n      </Provider>\n    </AntdProvider>\n  )\n}\n\nexport * from 'static.app'\n"],"names":["Object","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","_panel2","_panel3","obj","__esModule","panels","onMore","loading","disabled","Button","type","size","onClick","icon","name","constructor","_offset","key","Error","set","offset","k","this","Offset","rpc","super","api","stat","connection","service","referralAddress","auctionHouseAddress","getAPI","path","params","auth","toString","origin","searchParams","URLSearchParams","encodedURI","encodeURIComponent","getStat","getMyNFTs","async","walletAddress","listStatus","util","limit","url","data","axios","getCollection","symbol","getCollectionStat","getCollections","getPopularCollections","window","nextCollections","length","searchCollections","search","getListingNFTs","nextListingNFTs","getNFTMetadata","mintAddress","buyNow","buyerAddress","sellerAddress","price","sellerReferralAddress","buyer","seller","tokenMint","tokenATA","buyerReferral","sellerReferral","buyerExpiry","sellerExpiry","Transaction","Buffer","from","txSigned","sell","accountAddress","tokenAccount","expiry","cancel","sendAndConfirm","txIds","signedTx","signedTxs","txId","sendRawTransaction","serialize","skipPreflight","preflightCommitment","confirmTransaction","push","Connection","NAME","magicEdenSDK","MagicEdenSDK","createAsyncThunk","collections","collection","force","getState","currentData","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","assign","EMPTY_COLLECTION","categories","description","discord","image","EMPTY_IMAGE","twitter","website","useCollection","dispatch","useDispatch","useSelector","useEffect","onSocialMedia","e","stopPropagation","open","Space","EMPTY_STAT","floorPrice","volumeAll","listedCount","closable","onClose","collectionLoading","statLoading","useStat","to","useAppRoute","useMemo","onDetails","useCallback","onMagicEden","Card","cover","width","height","alt","src","Tooltip","title","className","style","fontWeight","format","shape","bodyStyle","padding","bordered","hoverable","Row","gutter","Col","span","Typography","level","ellipsis","rows","align","wrap","flex","Avatar","MagicEdenLogo","pushRecent","recent","category","prevRecent","newRecent","includes","PopularCollectionsDefault","loadHot","popularCollectionsParams","hot","prevHot","map","collectionSymbol","newHot","setLoading","useState","unwrap","keys","er","notify","message","i","xs","sm","lg","justify","onInit","Spin","spinning","timeoutId","SearchResult","onView","margin","Empty","cursor","keyword","setKeyword","setData","clearTimeout","setTimeout","undefined","Popover","placement","overlayStyle","trigger","content","Input","suffix","onChange","target","placeholder","shared","appId","process","development","production","devnet","whitelist","testnet","mainnet","usdc","address","decimals","uxd","usdt","usdh","manifest","env","pagination","payment","net","configs","getViewedSymbols","pdb","createPDB","getItem","addViewedSymbol","viewed","prevViewed","nextViewed","index","findIndex","splice","unshift","setItem","deleteViewedSymbol","all","filter","LIMIT","setLimit","useWalletAddress","currentList","slice","isEmpty","noMore","onDelete","onClearAll","Math","min","Divider","orientation","mine","prevMine","nft","onSell","onCancel","setPrice","listedPrice","collectionImage","infix","useInfix","selling","Skeleton","paragraph","avatar","round","active","Infix","InputNumber","addonAfter","SolLogo","String","readOnly","controls","block","handlingAddress","setHandlingAddress","wallet","sentre","sellTransaction","Number","signTransaction","response","TABS","CurrentList","useLocation","tab","setTab","Segmented","options","label","RANKS","moonrank","howrare","rank","isMobile","minWidth","maxWidth","direction","IMAGE_DEFAULT","metadata","useMetadata","extra","img","listing","collectionName","toUpperCase","buildResult","amount","balance","utils","BigInt","lamports","useWalletBalance","accounts","useAccounts","mint","useMintDecimals","DEFAULT_EMPTY_ADDRESS","tokenSymbol","estPrice","setEstPrice","setTokenAccount","useAccountBalance","validBuy","estimatePrice","splt","tokenInfo","nftPrice","solPrice","fetch","json","estimateExchangePrice","tokenAddres","deriveAssociatedAddress","vsToken","otcSDK","OTC","visible","setVisible","setTokenSymbol","auctionHouse","tokenName","priceNFT","usePriceExchange","onBuy","txs","setupTransaction","exchange","solAmount","buyNowTransaction","signAllTransactions","Fragment","Modal","footer","closeIcon","Alert","showIcon","rarity","prevNFTs","nfts","useParams","listingNFTs","back","values","textAlign","fontSize","href","rel","getMedal","totalVol","popularCollections","color","extend","marginTop","marginBottom","Switch","Route","exact","component","Collections","Collection","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","proto","getPrototypeOf","isPlainObject","PublicKey","BN","isBuffer","configureStore","middleware","getDefaultMiddleware","devTools","reducer","Page","AntdProvider","prefixCls","Provider","store","model"],"sourceRoot":""}