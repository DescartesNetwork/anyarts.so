{"version":3,"file":"static/js/401.83286676.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/configs/manifest.config.ts","app/configs/sol.config.ts","app/configs/index.ts","app/hooks/useRoute.ts","app/view/collections/collectionCard.tsx","app/sdk/magicEdenSDK.ts","app/model/magicEden.controller.tsx","app/view/collections/collectionList.tsx","app/view/home/index.tsx","app/sdk/index.ts","app/hooks/usePlatform.ts","app/view/collections/index.tsx","app/view/collection/index.tsx","app/hooks/useCollection.ts","app/view/index.tsx","app/model/main.controller.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/devTools.ts","shared/runtime.ts","shared/storage.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net, rpc } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  metaplexAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: rpc,\n    metaplexAddress: 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: rpc,\n    metaplexAddress: 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: rpc,\n    metaplexAddress: 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import configs from 'app/configs'\nimport { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type AppRoute = {\n  root: string\n  to: (subroute: string) => void\n  extend: (subroute: string) => string\n}\n\nexport const useRoute = (): AppRoute => {\n  const history = useHistory()\n\n  const root = `/app/${appId}`\n  const extend = useCallback((subroute: string) => root + subroute, [root])\n  const to = useCallback(\n    (subroute: string) => history.push(extend(subroute)),\n    [history, extend],\n  )\n\n  return { root, extend, to }\n}\n","import { useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppState } from 'app/model'\nimport { NFTPlatform } from 'app/sdk'\nimport { useCallback } from 'react'\nimport { useRoute } from 'app/hooks/useRoute'\n\nexport type CollectionCardProps = { platform: NFTPlatform; symbol: string }\n\nconst CollectionCard = ({ platform, symbol }: CollectionCardProps) => {\n  const {\n    [platform]: {\n      collections: {\n        [symbol]: { name, description, image, website, twitter, discord },\n      },\n    },\n  } = useSelector((state: AppState) => state)\n  const { to } = useRoute()\n\n  const onSocialMedia = (url: string) => window.open(url, '_blank')\n  const onDetails = useCallback(() => {\n    return to(`/${platform}/${symbol}`)\n  }, [to, platform, symbol])\n\n  return (\n    <Card\n      cover={<img alt={symbol} src={image} />}\n      bodyStyle={{ padding: 16 }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5} ellipsis>\n            {name}\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph ellipsis={{ rows: 2 }}>\n            {description}\n          </Typography.Paragraph>\n        </Col>\n        <Col flex=\"auto\">\n          <Space size={0}>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"earth-outline\" />}\n              onClick={() => onSocialMedia(website)}\n              disabled={!website}\n            />\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"logo-twitter\" />}\n              onClick={() => onSocialMedia(twitter)}\n              disabled={!twitter}\n            />\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"logo-discord\" />}\n              onClick={() => onSocialMedia(discord)}\n              disabled={!discord}\n            />\n          </Space>\n        </Col>\n        <Col>\n          <Button\n            type=\"primary\"\n            icon={<IonIcon name=\"arrow-forward-outline\" />}\n            onClick={onDetails}\n          />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CollectionCard\n","import axios from 'axios'\nimport { Net } from 'shared/runtime'\n\nexport const ENDPOINTS: Record<Net, string> = {\n  devnet: 'https://api-devnet.magiceden.dev/v2',\n  testnet: 'https://api-testnet.magiceden.dev/v2',\n  mainnet: 'https://api-mainnet.magiceden.dev/v2',\n}\n\nexport type MagicEdenCollection = {\n  categories: string[]\n  description: string\n  discord: string\n  image: string\n  name: string\n  symbol: string\n  twitter: string\n  website: string\n}\n\nexport type MagicEdenNFT = {\n  pdaAddress: string\n  auctionHouse: string\n  tokenAddress: string\n  tokenMint: string\n  seller: string\n  tokenSize: number\n  price: number\n}\n\nclass MagicEdenSDK {\n  public network: Net\n  public endpoint: string\n\n  constructor(network: Net) {\n    this.network = network\n    this.endpoint = ENDPOINTS[this.network]\n  }\n\n  getCollections = async (offset = 0, limit = 200) => {\n    const url = `${this.endpoint}/collections`\n    const { data } = await axios.get(url, { params: { offset, limit } })\n    return data as MagicEdenCollection[]\n  }\n\n  getNFTs = async (symbol: string, offset = 0, limit = 20) => {\n    const url = `${this.endpoint}/collections/${symbol}/listings`\n    const { data } = await axios.get(url, { params: { offset, limit } })\n    return data as MagicEdenNFT | undefined\n  }\n}\n\nexport default MagicEdenSDK\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport MagicEdenSDK, { MagicEdenCollection } from 'app/sdk/magicEdenSDK'\nimport { net } from 'shared/runtime'\n\n/**\n * Interface & Utility\n */\n\nexport type MagicEdenState = {\n  offset: number\n  limit: number\n  collections: Record<string, MagicEdenCollection>\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'magicEden'\nconst initialState: MagicEdenState = {\n  offset: 0,\n  limit: 12,\n  collections: {},\n}\nconst magicEdenSDK = new MagicEdenSDK(net)\n\n/**\n * Actions\n */\n\nexport const getCollections = createAsyncThunk<\n  Partial<MagicEdenState>,\n  void,\n  { state: any }\n>(`${NAME}/getCollections`, async (_, { getState }) => {\n  const {\n    magicEden: { offset: prevOffset, limit, collections: prevCollections },\n  } = getState()\n  const collections = await magicEdenSDK.getCollections(prevOffset, limit)\n  const nextCollections: Record<string, MagicEdenCollection> = {}\n  for (const collection of collections) {\n    nextCollections[collection.symbol] = collection\n  }\n  return {\n    offset: prevOffset + collections.length,\n    collections: { ...prevCollections, ...nextCollections },\n  }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getCollections.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\nimport CollectionCard from './collectionCard'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { NFTPlatform } from 'app/sdk'\nimport { getCollections } from 'app/model/magicEden.controller'\n\nexport type CollectionListProps = { platform: NFTPlatform; more?: boolean }\n\nconst CollectionList = ({ platform, more = true }: CollectionListProps) => {\n  const [loading, setLoading] = useState(false)\n  const {\n    [platform]: { collections, offset },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onMore = useCallback(async () => {\n    setLoading(true)\n    try {\n      await dispatch(getCollections())\n    } catch (er: any) {\n      return window.notify({ type: 'warning', description: er.message })\n    } finally {\n      return setLoading(false)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    if (!offset) onMore()\n  }, [offset, onMore])\n\n  return (\n    <Row gutter={[24, 24]}>\n      {Object.keys(collections).map((symbol, i) => (\n        <Col key={i} xs={12} sm={8} lg={6} xl={4} xxl={3}>\n          <CollectionCard platform={platform} symbol={symbol} />\n        </Col>\n      ))}\n      {more && (\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <Button onClick={onMore} type=\"primary\" loading={loading}>\n                More\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      )}\n    </Row>\n  )\n}\n\nexport default CollectionList\n","import { useCallback } from 'react'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport CollectionList from 'app/view/collections/collectionList'\n\nimport { useRoute } from 'app/hooks/useRoute'\nimport { NFTPlatform } from 'app/sdk'\n\nconst Home = () => {\n  const { to } = useRoute()\n\n  const onDetails = useCallback(\n    (platform: NFTPlatform) => to(`/${platform}`),\n    [to],\n  )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Button\n          type=\"primary\"\n          onClick={() => onDetails('magicEden')}\n          icon={<IonIcon name=\"images-outline\" />}\n        >\n          Magic Eden\n        </Button>\n      </Col>\n      <Col span={24}>\n        <CollectionList platform=\"magicEden\" more={false} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Home\n","import MagicEdenLogo from 'app/static/images/magic-eden-logo.jpeg'\n\nexport type NFTPlatform = 'magicEden'\n\nexport const PLATFORMS: NFTPlatform = 'magicEden'\n\nexport const PLATFORM_NAMES: Record<NFTPlatform, string> = {\n  magicEden: 'Magic Eden',\n}\n\nexport const PLATFORM_LOGOS: Record<NFTPlatform, string> = {\n  magicEden: MagicEdenLogo,\n}\n","import { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { NFTPlatform, PLATFORM_LOGOS, PLATFORM_NAMES } from 'app/sdk'\n\nexport const usePlatform = () => {\n  const { platform } = useParams<{ platform: NFTPlatform }>()\n  const name = useMemo(() => PLATFORM_NAMES[platform], [platform])\n  const logo = useMemo(() => PLATFORM_LOGOS[platform], [platform])\n\n  return { platform, name, logo }\n}\n","import { useCallback } from 'react'\n\nimport { Avatar, Button, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport CollectionList from './collectionList'\n\nimport { useRoute } from 'app/hooks/useRoute'\nimport { usePlatform } from 'app/hooks/usePlatform'\n\nconst Collections = () => {\n  const { platform, name, logo } = usePlatform()\n  const { to } = useRoute()\n\n  const onHome = useCallback(() => to('/'), [to])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[12, 12]} wrap={false} align=\"middle\">\n          <Col flex=\"auto\">\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"home-outline\" />}\n              onClick={onHome}\n            >\n              Home\n            </Button>\n          </Col>\n          <Col>\n            <Typography.Title type=\"secondary\" level={3}>\n              {name}\n            </Typography.Title>\n          </Col>\n          <Col>\n            <Avatar src={logo} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <CollectionList platform={platform} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Collections\n","import { Col, Row } from 'antd'\nimport { useCollection } from 'app/hooks/useCollection'\n\nconst Collection = () => {\n  const { symbol } = useCollection()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>{symbol}</Col>\n    </Row>\n  )\n}\n\nexport default Collection\n","import { useParams } from 'react-router-dom'\n\nimport { usePlatform } from './usePlatform'\n\nexport const useCollection = () => {\n  const { symbol } = useParams<{ symbol: string }>()\n  const { platform } = usePlatform()\n\n  return { platform, symbol }\n}\n","import { Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Home from './home'\nimport Collections from './collections'\nimport Collection from './collection'\n\nimport { useRoute } from 'app/hooks/useRoute'\n\nimport 'app/static/styles/light.less'\nimport 'app/static/styles/dark.less'\n\nconst View = () => {\n  const { extend } = useRoute()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Switch>\n          <Route exact path={extend('/')} component={Home} />\n          <Route exact path={extend('/:platform')} component={Collections} />\n          <Route\n            exact\n            path={extend('/:platform/:symbol')}\n            component={Collection}\n          />\n        </Switch>\n      </Col>\n      <Col span={24} />\n    </Row>\n  )\n}\n\nexport default View\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Connection, AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { node, metaplexAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type State = {}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(`${NAME}/getAccounts`, async () => {\n  const connection = new Connection(node)\n  const programId = new PublicKey(metaplexAddress)\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: 679 },\n        {\n          memcmp: {\n            offset: 0,\n            bytes: metaplexAddress,\n          },\n        },\n      ],\n    })\n  // let bulk: any = {}\n  // value.forEach(({ pubkey, account: { data: buf } }) => {\n  //   const address = pubkey.toBase58()\n  //   const data = interDao.parseDaoData(buf)\n  //   bulk[address] = { ...data }\n  // })\n  console.log(value)\n  return {}\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getAccounts.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport main from 'app/model/main.controller'\nimport magicEden from 'app/model/magicEden.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n    magicEden,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { WalletProvider, UIProvider } from '@senhub/providers'\n\nimport View from 'app/view'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <Provider store={model}>\n          <View />\n        </Provider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    val instanceof Buffer\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n\n/**\n * RPC Node\n */\nconst devnetRPCs = [\n  'https://api.devnet.solana.com',\n  'https://psytrbhymqlkfrhudd.dev.genesysgo.net:8899/',\n]\nconst testnetRPCs = ['https://api.testnet.solana.com']\nconst mainnetRPCs = [\n  'https://ssc-dao.genesysgo.net/',\n  'https://solana-api.projectserum.com',\n]\nconst balancing = <T>(arr: T[]): T => {\n  const rpc = arr[Math.floor(Math.random() * arr.length)]\n  console.log('Debug OS RPC:', rpc)\n  return rpc\n}\nconst getRPC = () => {\n  switch (net) {\n    case 'devnet':\n      return balancing(devnetRPCs)\n    case 'testnet':\n      return balancing(testnetRPCs)\n    case 'mainnet':\n      return balancing(mainnetRPCs)\n    default:\n      return balancing(mainnetRPCs)\n  }\n}\nexport const rpc: string = getRPC()\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","shared","appId","process","url","development","staging","production","devnet","node","rpc","metaplexAddress","testnet","mainnet","manifest","env","sol","net","configs","useRoute","history","useHistory","root","extend","useCallback","subroute","to","push","platform","symbol","collections","description","image","website","twitter","discord","useSelector","state","onSocialMedia","window","open","onDetails","Card","cover","alt","bodyStyle","padding","bordered","hoverable","Row","gutter","Col","span","Typography","level","ellipsis","rows","flex","Space","size","Button","type","icon","onClick","disabled","ENDPOINTS","NAME","magicEdenSDK","constructor","network","endpoint","getCollections","async","offset","limit","data","axios","params","getNFTs","this","createAsyncThunk","_","getState","magicEden","prevOffset","prevCollections","nextCollections","collection","length","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","Object","assign","more","loading","setLoading","useState","dispatch","useDispatch","onMore","er","notify","message","useEffect","keys","map","i","xs","sm","lg","xl","xxl","justify","PLATFORM_NAMES","PLATFORM_LOGOS","MagicEdenLogo","usePlatform","useParams","useMemo","logo","onHome","wrap","align","Avatar","useCollection","Switch","Route","exact","path","component","Home","Collections","Collection","getAccounts","connection","Connection","programId","PublicKey","value","getProgramAccounts","filters","dataSize","memcmp","bytes","console","log","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","main","Page","UIProvider","antd","prefixCls","WalletProvider","Provider","store","model","appName","BigInt","prototype","toJSON","toString","serializableCheck","isSerializable","val","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","BN","Buffer","storage","getNetwork","chainId","getChainId","devnetRPCs","testnetRPCs","mainnetRPCs","balancing","arr","Math","floor","random","getRPC","KEY","driver","localStorage","convert","JSON","parse","e","set","key","getItem","setItem","stringify","get","clear"],"sourceRoot":""}